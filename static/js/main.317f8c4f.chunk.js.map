{"version":3,"sources":["utils.js","Api/apiUtils.js","redux/actions/homePageActions.js","redux/actions/actionTypes.js","redux/actions/apiStatus.js","Api/movieApi.js","Components/commons/searchbar/searchbar.js","Components/commons/nav/nav.js","Components/commons/card/Card.js","Components/commons/listOfMovies/List.js","pages/movieProfile/movieProfile.js","Components/commons/spinner/Spinner.js","Components/commons/pagination/Pagination.js","pages/search.js","pages/popular.js","Components/commons/slick-slider/slick-slider.js","pages/homePage/Homepage.js","pages/PageNotFound.js","routes.js","App.js","serviceWorker.js","redux/reducers/initialState.js","redux/reducers/apiStatusReducer.js","redux/reducers/rootReducer.js","redux/reducers/homePageReducer.js","index.js","redux/configureStore.js"],"names":["API_KEY","BASE_URL","VIDEO_LINK","handleResponse","response","a","ok","console","log","json","status","text","error","Error","handleError","setMovie","currentMovie","dispatch","type","setCurrentMovie","setSearch","searchInput","payload","setInputUser","loadSearchResults","currentPage","fetch","then","catch","HomePageApi","searchResults","searchMoviesResultsSuccess","setCurrentPage","setCurrentPageSuccess","SearchBar","props","useState","search","setSearchUser","history","useHistory","searchItem","e","preventDefault","alert","push","className","action","to","onSubmit","onChange","target","value","placeholder","onClick","prototypes","PropTypes","func","isRequired","number","string","array","actions","object","mapDispatchToProps","homePageAction","connect","state","homePageReducer","Nav","emptyMovie","src","alt","Card","viewMovieInfo","movieId","style","backgroundImage","img","title","List","movieList","map","movie","i","key","poster_path","original_title","description","overview","id","MovieProfile","closeMovieInfo","genres","vote_average","searchTrailer","release_date","backdrop_path","genre_ids","mov","setMov","trailer","setTrailer","url","axios","get","data","results","channel","isOpen","videoId","onClose","size","name","color","cursor","substr","searchTrailerSuccess","Spinner","Pagination","totalPages","clickedNumber","pagesLink","setPagesLink","pageLinks","arrayOfPageLinks","active","arr","val","length","slice","chunkArray","Search","useParams","useEffect","undefined","filteredMovie","filter","newCurrentMovie","pageCount","pageRangeDisplayed","marginPagesDisplayed","onPageChange","current","selected","containerClassName","breakClassName","Popular","popularMovies","setPopular","proxy","popular","fetchData","SlickSlider","settings","dots","fade","speed","slidesToShow","autoplay","arrows","href","HomePage","loadPopularMovies","loadTrendingMovies","loadGenres","trendingMovies","apiStatusReducer","loading","bool","loadPopularMoviesSuccess","loadTrendingMoviesSuccess","searchGenresSuccess","apiCallsInProgress","PageNotFound","Routes","exact","path","component","Homepage","App","Boolean","window","location","hostname","match","currentMovieProfile","actionTypeEndsInSuccess","substring","rootReducer","combineReducers","initialState","total_pages","store","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","reduxImmutableStateInvariant","configureStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.317f8c4f.chunk.js","sourcesContent":["export const API_KEY = '?api_key=67b347978ffe14fc5d6f8a664a1829f2';\nexport const BASE_URL = 'https://api.themoviedb.org/3';\nexport const VIDEO_LINK = 'https://api.themoviedb.org/3/movie/';\nexport const PROXY = 'https://cors-anywhere.herokuapp.com/';\nexport const URL_DETAIL = 'https://api.themoviedb.org/3/movie/';\nexport const IMG_SIZE_45 = 'https://image.tmdb.org/t/p/w45/';\nexport const IMG_BASE_200 = 'https://image.tmdb.org/t/p/w200/';\nexport const IMG_BASE_1280 = 'https://image.tmdb.org/t/p/w1280/';\nexport const LOGO_NAV = 'https://www.themoviedb.org/assets/1/v4/logos/primary-green-d70eebe18a5eb5b166d5c1ef0796715b8d1a2cbc698f96d311d62f894ae87085.svg';\n\n\n\n\n","export async function handleResponse(response) {\n    if (response.ok){\n        console.log('fetch success')\n        return response.json();}\n    if (response.status === 400) {\n        const error = await response.text();\n        console.log(error);\n        throw new Error('404 error');\n    }\n    throw new Error(\"response failed\");\n}\n\nexport function handleError(error) {\n\n    console.error(\"API call failed. \" + error);\n    throw error;\n}\n","import * as types from \"./actionTypes\";\nimport * as HomePageApi from \"../../Api/movieApi\";\nimport {apiCallError, beginApiCall} from \"./apiStatus\";\n\n//action creators\nexport function loadTrendingMoviesSuccess(trendingMovies) {\n    return {type: types.LOAD_TRENDING_MOVIES_SUCCESS, trendingMovies};\n}\n\nexport function loadPopularMoviesSuccess(popularMovies) {\n    return {type: types.LOAD_POPULAR_MOVIES_SUCCESS, popularMovies};\n}\n\nexport function setCurrentMovie(currentMovie) {\n    return {type: types.SET_CURRENT_MOVIE, currentMovie};\n}\n\nexport function setInputUser(searchInput) {\n    return {type: types.SEARCH_INPUT, payload:searchInput};\n}\n\nexport function searchMoviesResultsSuccess(searchResults) {\n    return {type: types.SEARCH_RESULTS_SUCCESS,searchResults:searchResults};\n}\n\nexport function searchTrailerSuccess(trailer) {\n    return {type: types.SEARCH_TRAILER_SUCCESS,trailer}\n}\n\nexport function setCurrentPageSuccess(currentPage) {\n    return{type: types.SET_CURRENT_PAGE,currentPage}\n\n}\n\nexport function searchGenresSuccess(genres) {\n    return {type: types.SEARCH_GENRE_SUCCESS,genres}\n}\n//thunks\nexport function loadTrendingMovies() {\n    return function (dispatch) {\n        dispatch(beginApiCall());\n        return HomePageApi.loadTrendingMovies()\n            .then(trendingMovies => {\n            dispatch(loadTrendingMoviesSuccess(trendingMovies));\n        })\n            .catch(error => {\n            dispatch(apiCallError(error));\n            throw error ;\n        });\n    };\n}\n\nexport function loadPopularMovies(currentPage) {\n    return function (dispatch) {\n        dispatch(beginApiCall());\n        return HomePageApi\n            .loadPopularMovies(currentPage)\n            .then(popularMovies => {\n            dispatch(loadPopularMoviesSuccess(popularMovies));\n        }).catch(error => {\n            dispatch(apiCallError(error));\n            throw error;\n        });\n    };\n}\n\nexport function loadGenres() {\n    return function (dispatch) {\n        dispatch(beginApiCall());\n        return HomePageApi\n            .loadGenresMovies()\n            .then(genres => {\n                dispatch(searchGenresSuccess(genres));\n            }).catch(error => {\n                dispatch(apiCallError(error));\n                throw error;\n            });\n    };\n}\n\nexport function setMovie (currentMovie){\n    return function (dispatch) {\n        dispatch(setCurrentMovie(currentMovie));\n    }\n}\n\nexport function setSearch (searchInput){\n    return function (dispatch) {\n        dispatch(setInputUser(searchInput));\n    }\n}\n\nexport function loadSearchResults(searchInput,currentPage) {\n    return function (dispatch) {\n        dispatch(beginApiCall());\n       return HomePageApi.searchResults(searchInput,currentPage)\n            .then(searchResults => {\n                dispatch(searchMoviesResultsSuccess(searchResults));\n            })\n            .catch(error => {\n                dispatch(apiCallError(error));\n                throw error;\n            });\n    };\n}\n\nexport function searchTrailer(id) {\n    return function (dispatch) {\n        dispatch(beginApiCall());\n        return HomePageApi.loadTrailer(id)\n            .then(trailer =>{\n                dispatch(searchTrailerSuccess(trailer));\n            })\n            .catch(\n                error => {\n                    dispatch(apiCallError(error));\n                    throw error;\n                });\n    };\n}\n\nexport function setCurrentPage (currentPage){\n    return function (dispatch) {\n        dispatch(setCurrentPageSuccess(currentPage));\n    }\n}\n\n\n\n","export const LOAD_TRENDING_MOVIES_SUCCESS = 'LOAD_TRENDY_MOVIES_SUCCESS ';\nexport const LOAD_POPULAR_MOVIES_SUCCESS = 'LOAD_POPULAR_MOVIES_SUCCESS ';\nexport const BEGIN_API_CALL ='BEGIN_API_CALL';\nexport const API_CALL_ERROR = 'API_CALL_ERROR';\nexport const SET_CURRENT_MOVIE = 'SET_CURRENT_MOVIE';\nexport const SEARCH_INPUT = 'SEARCH_INPUT';\nexport const SEARCH_RESULTS_SUCCESS  ='SEARCH_RESULTS_SUCCESS';\nexport const SEARCH_TRAILER_SUCCESS  = 'SEARCH_TRAILER_SUCCESS';\nexport const SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nexport const SEARCH_GENRE_SUCCESS = 'SEARCH_GENRE_SUCCESS';\n\n","import * as types from './actionTypes'\n\nexport function beginApiCall() {\n    return{type: types.BEGIN_API_CALL}\n}\nexport function apiCallError() {\n    return{type: types.API_CALL_ERROR}\n}\n","import { handleResponse, handleError } from \"./apiUtils\";\nimport {API_KEY, BASE_URL, VIDEO_LINK} from \"../utils\";\n\nexport function searchResults(searchInput,currentPage) {\n    return fetch(`${BASE_URL}/search/movie${API_KEY}&query=${searchInput}&page=${currentPage}`)\n        .then(handleResponse)\n        .catch(handleError);\n}\n\nexport function loadTrendingMovies() {\n    return fetch(`${BASE_URL}/trending/all/day${API_KEY}`)\n        .then(handleResponse)\n        .catch(handleError);\n\n}\n\nexport function loadPopularMovies(currentPage) {\n        return  fetch (`${BASE_URL}/movie/popular${API_KEY}&language=en-US&page=${currentPage}`)\n            .then(handleResponse)\n            .catch(handleError);\n}\n\n//id  is currentMovie.id\nexport function loadTrailer(id) {\n    return fetch(`${VIDEO_LINK}${id}/videos/${API_KEY}`)\n        .then(handleResponse)\n        .catch(handleError);\n\n}\n\n\nexport function loadGenresMovies() {\n    return fetch(`${BASE_URL}/genre/movie/list${API_KEY}&language=en-US`)\n        .then(handleResponse)\n        .catch(handleError);\n}\n\n\n","import React, {useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport {Link, useHistory} from 'react-router-dom';\nimport PropTypes from 'prop-types'\nimport * as homePageAction from \"../../../redux/actions/homePageActions\";\nimport './searchBar.scss';\nimport {FaSearch} from \"react-icons/all\";\n\nfunction SearchBar({\n    setSearch,\n    loadSearchResults,\n    searchInput,\n    searchResults,\n    currentPage,\n    setMovie,\n    ...props\n    }) {\n\n    const [search, setSearchUser] = useState('');\n    const history = useHistory();\n\n    //search and  redirect to search results\n    const searchItem = async (e) => {\n        e.preventDefault();\n\n        if (search === \"\") {\n            alert(\"please enter a movie title\")\n        } else {\n            setSearch(search);\n            setMovie([]);\n            loadSearchResults(search).catch(error => {\n                alert(\"loading popular\" + error)\n            })\n            history.push(`/search/${search}`);\n        }\n    }\n\n    const handleChange = (e) => {\n        setSearchUser(e.target.value);\n    };\n\n    return (\n        <div className={'search'}>\n            <form action={<Link to={'/search'}>search</Link>} onSubmit={searchItem}>\n                <input onChange={handleChange} type=\"text\" value={search} placeholder={'search for a movie'}/>\n                <button type={'submit'} onClick={searchItem}><Link to={'/search'}><FaSearch /></Link></button>\n            </form>\n            <p>{props.searchInput}</p>\n        </div>\n    )\n\n}\n\nSearchBar.prototypes = {\n    setSearch: PropTypes.func.isRequired,\n    setMovie: PropTypes.func.isRequired,\n    currentPage: PropTypes.number.isRequired,\n    loadSearchResults: PropTypes.func.isRequired,\n    searchInput: PropTypes.string.isRequired,\n    searchResults: PropTypes.array.isRequired,\n    actions: PropTypes.object.isRequired\n}\n\nfunction mapStateToProps(state) {\n    return {\n        currentPage: state.homePageReducer.currentPage,\n        searchInput: state.homePageReducer.searchInput,\n        searchResults: state.homePageReducer.searchResults\n    };\n}\n\n\nconst mapDispatchToProps = {\n    setSearch: homePageAction.setSearch,\n    setMovie: homePageAction.setMovie,\n    loadSearchResults: homePageAction.loadSearchResults\n\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBar);\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport \"./navbar.scss\"\nimport {LOGO_NAV} from \"../../../utils\";\nimport {connect} from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport SearchBar from \"./../../commons/searchbar/searchbar\";\nimport * as homePageAction from \"../../../redux/actions/homePageActions\";\n\nfunction Nav ({setMovie}) {\n    function emptyMovie(){setMovie([]);}\n    return(\n    <div>\n     <nav className={'nav'}>\n         <div className={\"nav-links\"}>\n             <img src={LOGO_NAV} alt=\"\"/>\n             <ul>\n             <li onClick={emptyMovie}><Link to={'/home'}>home</Link></li>\n             <li onClick={emptyMovie}><Link to={'/login'}>login</Link></li>\n             <li onClick={emptyMovie} className={\"hide\"}><i >search</i></li>\n             </ul>\n         </div>\n         <div className={'nav-search'}>\n            <SearchBar/>\n         </div>\n     </nav>\n    </div>\n    )\n}\nNav.prototypes  ={\n    setMovie: PropTypes.func.isRequired,\n\n}\n\nconst mapDispatchToProps = {\n    setMovie:  homePageAction.setMovie\n}\nexport default  connect(null,mapDispatchToProps)(Nav);\n","import React from \"react\";\nimport  \"./card.scss\";\n\nconst Card  = (props) =>{\n    return(\n\n            <div onClick={()=> props.viewMovieInfo(props.movieId)}>\n                <div className={'cardMovie'} style={{backgroundImage: `url(${props.img})`}} />\n                <p className={\"titleMovie\"}>{props.title}</p>\n           </div>\n\n    )\n};\n\nexport default Card\n","import React from \"react\";\nimport Card from \"../card/Card.js\"\nimport {IMG_BASE_200} from \"../../../utils\";\n\nconst List =({movieList,viewMovieInfo}) =>(\n    <div  className={'list'}>\n       {\n         movieList.map((movie, i) =>{\n             return <Card\n                        key={i}\n                        img={`${IMG_BASE_200}${movie.poster_path}`}\n                        title={movie.original_title}\n                        description={movie.overview}\n                        viewMovieInfo={viewMovieInfo}\n                        movieId={movie.id}\n                    />\n             })\n       }\n    </div>\n)\nexport default List;\n","import React, {useState} from 'react';\nimport \"../../utils\";\nimport {connect} from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport {FaPlay} from \"react-icons/all\";\nimport * as homePageAction from \"../../redux/actions/homePageActions\";\nimport './movieProfile.scss'\nimport axios from \"axios\";\nimport{VIDEO_LINK,API_KEY} from \"../../utils\";\nimport ModalVideo from \"react-modal-video\";\nimport 'react-modal-video/scss/modal-video.scss';\n\nfunction MovieProfile({closeMovieInfo,currentMovie,genres,searchTrailer}) {\n\n    const {vote_average, id, release_date, backdrop_path, overview, poster_path, genre_ids, title} = currentMovie;\n\nconst [mov,setMov] = useState('');\nconst [trailer,setTrailer]=useState(false);\n\n   async function checkTrailer(){\n        if(mov === ''){\n            const url = `${VIDEO_LINK}${id}/videos${API_KEY}`;\n            axios.get(url).then(response => {\n                setMov( response.data.results[0].key );\n\n            });\n\n        }\n        setTrailer(true);\n\n\n        /* if(trailer=== undefined){\n             searchTrailer(id).catch(error => {\n                 alert(\"loading popular\" + error)\n             });\n         }*/\n\n     }\n    console.log(mov)\n    return (\n        <>\n           <div className={\"container-profile\"} style={{backgroundImage: `url(https://image.tmdb.org/t/p/w1280/${backdrop_path})`}}>\n                {\n                    trailer\n                    ?\n                    <ModalVideo\n                        channel=\"youtube\"\n                        isOpen={trailer}\n                        videoId={mov}\n                        onClose={() => setTrailer(false)}\n                    />\n                    :\n                    <div className={'content'}>\n                        <div className={'cross'}>\n                            <ion-icon\n                                size=\"large\" name=\"close-outline\" onClick={closeMovieInfo}\n                                style={{color: \"whitesmoke\", cursor: \"pointer\"}}\n                            />\n                        </div>\n                        <div className={\"info\"}>\n                            <div className={\"profile-img\"}>\n                                <div className={\"img-container\"}>\n                                    <img src={`https://image.tmdb.org/t/p/w500/${poster_path}`} alt={title}/>\n                                </div>\n                            </div>\n                            <div className=\"profile-text\">\n                                <h2>{title}</h2>\n                                <ul className={'sub-title'}>\n                                    <li><small>{vote_average === 0 ? \"No ratings yet\" : `Rating: ${vote_average}`} </small></li>\n                                    <li> <small>Year: {release_date.substr(0, 4)} </small></li>\n                                </ul>\n                                <br/>\n\n                                    {/*{ */}\n                                    {/*    genre_ids.map(id => {*/}\n                                    {/*       const allGenres = genres.genres*/}\n\n                                    {/*        Object.keys(allGenres).forEach(*/}\n                                    {/*            function(key) {*/}\n                                    {/*            console.log(key,allGenres[key].name)*/}\n                                    {/*            return allGenres[0].name*/}\n                                    {/*        })*/}\n                                    {/*    })*/}\n                                    {/*}*/}\n                               <ul className={\"genres\"}>\n                                   <li>{genres.genres[0].name}</li>\n                                   <li>{genres.genres[1].name}</li>\n                                   <li>{genres.genres[2].name}</li>\n                               </ul>\n                                <p className={\"description\"}>{overview}</p>\n                                <ul>\n                                    <li className={'trailer-btn'} onClick={checkTrailer}>\n                                        trailer\n                                        <FaPlay/>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n\n                }\n           </div>\n        </>\n    )\n}\nMovieProfile.prototypes = {\n    trailer: PropTypes.array.isRequired,\n    searchTrailer: PropTypes.func.isRequired,\n    currentMovie :PropTypes.array.isRequired\n}\n\nfunction mapStateToProps(state) {\n    return {\n        trailer: state.homePageReducer.trailer,\n        currentMovie: state.homePageReducer.currentMovie,\n        genres: state.homePageReducer.genres\n    };\n}\n\nconst mapDispatchToProps = {\n    searchTrailer:  homePageAction.searchTrailer()\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(MovieProfile);\n","\nimport React from 'react';\nimport \"./spinner.css\"\n\nconst Spinner =() =>{\n    return<div className={\"loader\"}>Loading...</div>\n};\nexport default Spinner;\n","import React, {useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport * as homePageAction from \"../../../redux/actions/homePageActions\";\nimport \"./pagination.scss\"\n\nfunction Pagination({totalPages,currentPage,clickedNumber}) {\n\n    const [pagesLink, setPagesLink]= useState(0);\n    const pageLinks=[];\n    const arrayOfPageLinks=[];\n\n    //for every page, create li with its corresponding number, if page is the current page add .active class\n\n    for(let i =1; i <= totalPages; i++){\n        let active = currentPage === i ? 'active': '';\n            pageLinks.push(<li className={` ${active}`} key={i} onClick={()=>{clickedNumber(i)}}>{i}</li>)\n    }\n\n    //slice array of links in smaller arrays of ten, so that you can  display 5 pages at the time\n    function chunkArray(arr,val) {\n        for(let i =0; i <= arr.length; i += val){\n            arrayOfPageLinks.push(arr.slice(i, val + i));\n        }\n    }\n    chunkArray(pageLinks,5);\n\n    //show next set of pages, stop at last page.you could also setPagesLink to 0 to go back to the beginning of your pages\n    const Next = ()=>{\n        if(arrayOfPageLinks.length -1 === pagesLink){\n            setPagesLink(arrayOfPageLinks.length -1)\n        }else{\n            setPagesLink(pagesLink+1);\n        }\n    };\n\n    //same as next, but backwards\n    const Previous = ()=>{\n        if(pagesLink > 0){\n            setPagesLink(pagesLink-1)\n        }\n        if(pagesLink < 0){\n            setPagesLink(pagesLink);\n        }\n    };\n\n    return(\n        <div className={\"container\"}>\n            <div className=\"row\">\n                <ul className={\"pagination\"}>\n                    <button onClick={Previous}>...</button>\n                    {arrayOfPageLinks[pagesLink]}\n                    <button onClick={Next}>...</button>\n                </ul>\n            </div>\n        </div>\n    )\n\n}\n\nPagination.prototypes = {\n    setCurrentPage: PropTypes.func.isRequired,\n    currentPage: PropTypes.number.isRequired,\n    currentMovie:  PropTypes.array.isRequired,\n}\n\nfunction mapStateToProps(state) {\n    return {\n       totalPages: state.homePageReducer.totalPages,\n       currentPage: state.homePageReducer.currentPage\n\n    };\n}\n\nconst mapDispatchToProps = {\n    setCurrentPage: homePageAction.setCurrentPage,\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Pagination);\n","import React, {useEffect, useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport List from \"../Components/commons/listOfMovies/List\";\nimport {useHistory, useParams} from \"react-router-dom\";\nimport MovieProfile from \"./movieProfile/movieProfile\";\nimport Spinner from \"../Components/commons/spinner/Spinner\";\nimport PropTypes from \"prop-types\";\nimport * as homePageAction from \"../redux/actions/homePageActions\";\nimport Pagination from \"../Components/commons/pagination/Pagination\";\nimport ReactPaginate from \"react-paginate\";\n\nfunction Search({\n                    setMovie,\n                    searchInput,\n                    searchResults,\n                    loadSearchResults,\n                    setCurrentPage,\n                    currentMovie,\n                    currentPage,\n                    setSearch,\n                    totalPages\n                }) {\n    const [movieGenres] = useState([]);\n    const history = useHistory();\n    const {name} = useParams();\n\n      useEffect(()=>{\n          setSearch(name)\n         if(searchInput !=='' || currentPage !==1 ) {\n             loadSearchResults(searchInput,currentPage).catch(error => {\n                 alert(\"loading search results failed\" + error)\n             })\n             history.push(`/search/${searchInput}`);\n         }\n      },[searchInput,currentPage,name,loadSearchResults,history,setSearch]);\n\n    const viewMovieInfo = (id) => {\n        const filteredMovie = searchResults.filter(movie => movie.id === id);\n        const newCurrentMovie = filteredMovie.length > 0 ? filteredMovie[0] : null;\n        setMovie(newCurrentMovie);\n\n        history.push(`/home/${newCurrentMovie.title}`);\n    };\n\n    function clickedNumber(current){\n        current = current.selected+1\n        if(current !== currentPage){\n            setCurrentPage(current);\n            loadSearchResults(currentPage);\n        }\n    }\n\n    return (\n        <div>\n            { <>\n\n                    {\n                        searchResults === undefined\n                            ?\n                            <>\n                                <Spinner/>\n                            </>\n                            :\n                            searchResults.length === 0\n                                ?\n                                <p>no movies found</p>\n                                :\n                                <>\n                                    <h3>Results for: {searchInput}</h3>\n                                    <List movieList={searchResults} viewMovieInfo={viewMovieInfo}/>\n                                    <ReactPaginate\n                                        pageCount = {totalPages}\n                                        pageRangeDisplayed = {4}\n                                        marginPagesDisplayed = {0}\n                                        onPageChange={clickedNumber}\n                                        containerClassName = {'container'}\n                                        breakClassName={\"break\"}\n                                    />\n                                </>\n                    }\n\n                </>\n\n            }\n\n        </div>\n    )\n}\n\nSearch.prototypes = {\n    loadSearchResults: PropTypes.func.isRequired,\n    setCurrentPage: PropTypes.func.isRequired,\n    setSearch:PropTypes.func.isRequired,\n    searchInput: PropTypes.string.isRequired,\n    searchResults: PropTypes.array.isRequired,\n    currentMovie: PropTypes.array.isRequired,\n    actions: PropTypes.object.isRequired,\n    setMovie: PropTypes.func.isRequired,\n}\n\nfunction mapStateToProps(state) {\n    return {\n        searchInput: state.homePageReducer.searchInput,\n        searchResults: state.homePageReducer.searchResults,\n        currentMovie: state.homePageReducer.currentMovie,\n        currentPage: state.homePageReducer.currentPage,\n        totalPages: state.homePageReducer.totalPages\n    };\n}\nconst mapDispatchToProps = {\n    loadSearchResults: homePageAction.loadSearchResults,\n    setSearch: homePageAction.setSearch,\n    setMovie: homePageAction.setMovie,\n    setCurrentPage: homePageAction.setCurrentPage\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\n","import React, {useEffect, useState} from \"react\";\nimport List from \"../Components/commons/listOfMovies/List\";\n\nfunction Popular() {\n\n    const [popularMovies, setPopular] = useState([]);\n    const proxy = \"https://cors-anywhere.herokuapp.com/\";\n\n    //on load, load List with popular movies\n    useEffect(() => {\n        async function fetchData() {\n            const response = await fetch (`${proxy}https://api.themoviedb.org/3/movie/popular?api_key=67b347978ffe14fc5d6f8a664a1829f2&language=en-US&page=1\n `);\n\n            const popular = await response.json();\n            setPopular(popular.results);\n        }\n        fetchData();\n    }, []);\n\n\n    return(\n        <div className={'popular-container'}>\n        <h1>Popular movies</h1>\n        <List movieList={popularMovies}/>\n        </div>\n    )\n\n}\n\nexport default Popular;\n","import React from 'react';\nimport 'slick-carousel/slick/slick.css'\nimport 'slick-carousel/slick/slick-theme.css'\nimport Slider from \"react-slick\";\nimport './slick-slider.css';\n\n\nfunction SlickSlider({popularMovies}) {\n\n\n    const settings = {\n        dots: false,\n        fade: true,\n\n        speed: 200,\n\n        slidesToShow: 1,\n        autoplay: true,\n        arrows: false,\n        className: 'slides',\n\n    };\n\n    return (\n        <div className=\"App\">\n            <Slider {...settings}>\n                {\n                    popularMovies.map((movie, i) => {\n                        return <div key={i}>\n                            <div className=\"carousel-item\" key={i} style={{backgroundImage: `url(https://image.tmdb.org/t/p/w1280/${movie.backdrop_path})`}}>\n                                <div className={'slider-text'}>\n                                    <h1>Movie DB</h1>\n                                    <h3>browse through the biggest movie library</h3>\n                                    <a href=\"#popularSection\"><ion-icon size={\"large\"} name=\"arrow-down\"/>\n                                    </a>\n                                </div>\n                            </div>\n                        </div>\n                    })\n                }\n            </Slider>\n        </div>\n    );\n}\n\nexport default SlickSlider;\n","import React, {useEffect} from \"react\";\nimport {connect} from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport * as homePageAction from \"../../redux/actions/homePageActions\";\nimport List from \"../../Components/commons/listOfMovies/List\";\nimport MovieProfile from '../movieProfile/movieProfile';\nimport SlickSlider from \"../../Components/commons/slick-slider/slick-slider\";\nimport \"./homepage.scss\"\nimport Spinner from \"../../Components/commons/spinner/Spinner\";\nimport ReactPaginate from 'react-paginate';\nimport { useHistory } from \"react-router-dom\";\n\nfunction HomePage({\n    loadPopularMovies,\n    loadTrendingMovies,\n    loadGenres,\n    genres,\n    setMovie,\n    popularMovies,\n    trendingMovies,\n    currentMovie,\n    currentPage,\n    setCurrentPage,\n    totalPages\n    }) {\n\n    useEffect(()=>{\n        if(genres === undefined || genres.length === 0){\n            loadGenres()\n                .catch(error => {\n                    alert(\"loading trending movies\" + error)\n                })\n        }\n    },[loadGenres,genres,currentPage])\n    useEffect(() => {\n\n        if (popularMovies === undefined ||popularMovies.length === 0) {\n            loadPopularMovies(currentPage)\n\n                .catch(error => {\n                    alert(\"loading popular\" + error)\n                })\n        }\n        if (trendingMovies === undefined || trendingMovies.length ===0) {\n            loadTrendingMovies()\n                .catch(error => {\n                    alert(\"loading trending movies\" + error)\n                })\n        }\n\n\n\n    }, [trendingMovies, popularMovies, loadTrendingMovies, loadPopularMovies,currentPage]);\n    const history = useHistory();\n    const viewMovieInfo = (id) => {\n            const filteredMovie = popularMovies.filter(movie => movie.id === id);\n            const newCurrentMovie = filteredMovie.length > 0 ? filteredMovie[0] : null;\n            // set selected movie to current movie and push data\n            setMovie(newCurrentMovie);\n            history.push(`/home/${newCurrentMovie.title}`);\n    };\n\n    function clickedNumber(current){\n        console.log(currentPage)\n        console.log( current.selected+1)\n        current = current.selected+1\n        if(current !== currentPage){\n            setCurrentPage(current);\n\n            loadPopularMovies(currentPage);\n        }\n    }\n\n    return (\n        <>\n            {\n\n                    popularMovies === undefined  || trendingMovies === undefined\n                        ?\n                        <Spinner/>\n                        :\n                        <>\n                            <SlickSlider\n                            popularMovies={popularMovies}/>\n                            <h1 id=\"popularSection\">Popular movies</h1>\n                            <List\n                                movieList={popularMovies}\n                                viewMovieInfo={viewMovieInfo}\n                            />\n                            <ReactPaginate\n                                pageCount={totalPages}\n                                pageRangeDisplayed={4}\n                                marginPagesDisplayed={0}\n                                onPageChange={clickedNumber}\n                                containerClassName={'container'}\n                                breakClassName={\"break\"}\n                            />\n                        </>\n            }\n        </>\n    )\n}\n\nHomePage.prototypes = {\n    loadPopularMovies: PropTypes.func.isRequired,\n    loadTrendingMovies: PropTypes.func.isRequired,\n    loadGenres: PropTypes.func.isRequired,\n    setMovie:  PropTypes.func.isRequired,\n    popularMovies: PropTypes.array.isRequired,\n    trendingMovies: PropTypes.object.isRequired,\n    apiStatusReducer: PropTypes.number.isRequired,\n    loading: PropTypes.bool.isRequired,\n    currentMovie:  PropTypes.array.isRequired,\n    currentPage: PropTypes.number.isRequired,\n    totalPages: PropTypes.number.isRequired,\n}\n\nfunction mapStateToProps(state) {\n    return {\n        trendingMovies: state.homePageReducer.trendingMovies,\n        popularMovies: state.homePageReducer.popularMovies,\n        currentMovie: state.homePageReducer.currentMovie,\n        currentPage: state.homePageReducer.currentPage,\n        totalPages: state.homePageReducer.totalPages,\n        loading: state.apiCallsInProgress > 0\n\n    };\n}\n\nconst mapDispatchToProps = {\n    loadPopularMovies: homePageAction.loadPopularMovies,\n    loadTrendingMovies: homePageAction.loadTrendingMovies,\n    loadGenres: homePageAction.loadGenres,\n    setMovie:  homePageAction.setMovie,\n    setCurrentPage: homePageAction.setCurrentPage\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\n\n\n\n\n","import React from 'react'\n\nconst PageNotFound = () => <h1>Oops! page not found.</h1>;\n\nexport default PageNotFound\n","import React from \"react\";\nimport {Switch, Route} from 'react-router-dom';\nimport Search from \"../src/pages/search\"\nimport Popular from \"../src/pages/popular\"\nimport Homepage from \"./pages/homePage/Homepage\"\nimport PageNotFound from \"./pages/PageNotFound\"\nimport MovieProfile from \"./pages/movieProfile/movieProfile\";\n\nconst Routes = () =>{\n    return(\n        <Switch>\n            <Route exact path=\"/\" component={Homepage}/>\n            <Route exact path=\"/home\" component={Homepage}/>\n            <Route  path=\"/home/:currentMovie\"  component={MovieProfile}/>\n            <Route exact path=\"/Movie-browse\" component={Homepage}/>\n            <Route exact path=\"/popular\" component={Popular}/>\n            <Route exact path=\"/top5\"/>\n            <Route path=\"/search/:name\" component={Search}/>\n            <Route path=\"/movieProfile/:currentMovie\" component={MovieProfile}/>\n            <Route component={PageNotFound}/>\n        </Switch>\n    )\n};\n\nexport default Routes;\n","import React from 'react';\nimport Nav from \"./Components/commons/nav/nav\";\nimport Routes from \"./routes\";\nimport './App.css';\n\n  export function App() {\n          return (\n              <div className=\"App\">\n                  <Nav/>\n                  <Routes/>\n              </div>\n          )\n    }\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export default {\n    searchInput:'',\n    currentPage: 1,\n    currentMovieProfile:  null,\n    apiCallsInProgress: 0,\n    currentMovie:[],\n    loading: false,\n\n};\n","import * as types from '../actions/actionTypes'\nimport initialState from \"./initialState\";\n\nfunction actionTypeEndsInSuccess(type) {\n  return type.substring(type.length -8 ) === '_SUCCESS';\n}\n\nexport default function apiCallStatusReducer(\n    state = initialState.apiCallsInProgress,\n    action) {\n  if(action.type === types.BEGIN_API_CALL){\n    return state +  1;\n  }\n  if(actionTypeEndsInSuccess(action.type)){\n    return state - 1\n  }\n  else if (action.type === types.API_CALL_ERROR ){\n    return state - 1\n  }\n    return state\n}\n","import {combineReducers} from \"redux\";\nimport homePageReducer from \"./homePageReducer\";\nimport apiStatusReducer from \"./apiStatusReducer\";\n\nconst rootReducer = combineReducers({\n    homePageReducer,\n    apiStatusReducer,\n\n});\nexport default rootReducer;\n","import * as types from \"../actions/actionTypes\";\nimport initialState from \"./initialState\";\n\nexport default function homePageReducer(state = initialState, action) {\n    switch (action.type) {\n        case types.LOAD_TRENDING_MOVIES_SUCCESS:\n            return {\n                ...state,\n                trendingMovies: action.trendingMovies.results,\n                totalPages: action.trendingMovies.total_pages,\n\n            };\n        case types.SET_CURRENT_MOVIE:\n            return {...state, currentMovie: action.currentMovie};\n        case types.LOAD_POPULAR_MOVIES_SUCCESS:\n            return {\n                ...state,\n                popularMovies: action.popularMovies.results,\n                totalPages: action.popularMovies.total_pages,\n\n            };\n        case types.SEARCH_INPUT:\n            return {...state, searchInput: action.payload};\n        case types.SEARCH_RESULTS_SUCCESS:\n            return {\n                ...state,\n                searchResults: action.searchResults.results,\n                totalPages: action.searchResults.total_pages,\n            };\n        case types.SET_CURRENT_PAGE:\n            return {...state,currentPage: action.currentPage};\n        case types.SEARCH_GENRE_SUCCESS:\n            return {...state, genres: action.genres};\n        default:\n            return state;\n    }\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter,HashRouter} from \"react-router-dom\";\nimport configureStore from \"./redux/configureStore\";\n\n//provider is a higher order component that provides  your redux data to child components\nimport {Provider as ReduxProvider} from 'react-redux'\n\nlet  store = configureStore();\n\nReactDOM.render(\n\n      <BrowserRouter>\n          <ReduxProvider store={store}>\n            <App />\n          </ReduxProvider>\n      </BrowserRouter>\n\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {createStore, applyMiddleware, compose} from \"redux\";\nimport rootReducer from \"./reducers/rootReducer\";\nimport reduxImmutableStateInvariant from 'redux-immutable-state-invariant'\nimport thunk from \"redux-thunk\";\nimport logger from 'redux-logger'\nexport default function configureStore(initialState) {\n\n    //this adds support for redux dev tools, this const gives us a funtion that we can call\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n    return createStore(\n        rootReducer,\n        initialState,\n        composeEnhancers(applyMiddleware(thunk,reduxImmutableStateInvariant()))\n    );\n}\n//configureStore takes in initial state as parameter so we have some data\n//middleware  is  a way to enhance redux with extra functionality, 3rd parameter for create store  accepts the middlewarefunction\n//reduxImmutableStateInvariant() will warn you if you accidentally mutate  any state directly inside the store\n"],"sourceRoot":""}