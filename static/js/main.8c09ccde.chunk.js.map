{"version":3,"sources":["utils.js","Api/apiUtils.js","redux/actions/homePageActions.js","redux/actions/actionTypes.js","redux/actions/apiStatus.js","Api/movieApi.js","Components/commons/searchbar.js","Components/commons/nav.js","Components/commons/Card.js","Components/commons/List.js","pages/movieProfile/movieProfile.js","Components/commons/spinner/Spinner.js","pages/search.js","pages/popular.js","Components/slick-slider/slick-slider.js","pages/Homepage.js","pages/PageNotFound.js","routes.js","App.js","serviceWorker.js","redux/reducers/initialState.js","redux/reducers/apiStatusReducer.js","redux/reducers/rootReducer.js","redux/reducers/homePageReducer.js","index.js","redux/configureStore.js"],"names":["API_KEY","BASE_URL","PROXY","handleResponse","response","a","ok","console","log","json","status","text","error","Error","handleError","setMovie","currentMovie","dispatch","type","setCurrentMovie","loadSearchResults","searchInput","fetch","then","catch","HomePageApi","searchResults","searchMoviesResultsSuccess","SearchBar","setSearch","props","currentPage","useState","search","setSearchUser","history","useHistory","searchItem","e","preventDefault","alert","push","className","action","to","onSubmit","onChange","target","value","placeholder","onClick","prototypes","PropTypes","func","isRequired","number","string","array","actions","object","mapDispatchToProps","payload","setInputUser","homePageAction","connect","state","homePageReducer","Nav","src","alt","Card","viewMovieInfo","movieId","style","backgroundImage","img","title","List","movieList","map","movie","i","key","poster_path","original_title","description","overview","id","MovieProfile","vote_average","release_date","backdrop_path","genre_ids","size","name","closeMovieInfo","color","cursor","substr","genre","Spinner","Search","movieGenres","filteredMovie","filter","newCurrentMovie","length","undefined","Popular","popularMovies","setPopular","proxy","useEffect","popular","results","fetchData","SlickSlider","settings","dots","fade","speed","slidesToShow","autoplay","arrows","HomePage","loadPopularMovies","loadTrendingMovies","trendingMovies","apiStatusReducer","loading","bool","loadPopularMoviesSuccess","loadTrendingMoviesSuccess","ownProps","apiCallsInProgress","PageNotFound","Routes","exact","path","component","Homepage","App","Boolean","window","location","hostname","match","currentMovieProfile","actionTypeEndsInSuccess","substring","rootReducer","combineReducers","initialState","store","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","reduxImmutableStateInvariant","logger","configureStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.8c09ccde.chunk.js","sourcesContent":["\nexport const API_KEY = '?api_key=67b347978ffe14fc5d6f8a664a1829f2';\nexport const BASE_URL = 'https://api.themoviedb.org/3';\nexport const VIDEO_LINK = 'https://api.themoviedb.org/3/movie/';\nexport const PROXY = 'https://cors-anywhere.herokuapp.com/';\nexport const URL_DETAIL = 'https://api.themoviedb.org/3/movie/';\nexport const URL_SEARCH = `https://api.themoviedb.org/3/search/movie${API_KEY}?query=`;\nexport const IMG_SIZE_45 = 'https://image.tmdb.org/t/p/w45/';\nexport const IMG_BASE_200 = 'https://image.tmdb.org/t/p/w200/';\nexport const IMG_BASE_1280 = 'https://image.tmdb.org/t/p/w1280/';\nexport const LOGO_NAV = 'https://www.themoviedb.org/assets/1/v4/logos/primary-green-d70eebe18a5eb5b166d5c1ef0796715b8d1a2cbc698f96d311d62f894ae87085.svg';\n\n\n\n\n","export async function handleResponse(response) {\n    if (response.ok){\n        console.log('fetch success')\n        return response.json();}\n    if (response.status === 400) {\n        const error = await response.text();\n        console.log(error);\n        throw new Error('404 error');\n    }\n    throw new Error(\"response failed\");\n}\n\nexport function handleError(error) {\n\n    console.error(\"API call failed. \" + error);\n    throw error;\n}\n","import * as types from \"./actionTypes\";\nimport * as HomePageApi from \"../../Api/movieApi\";\nimport {apiCallError, beginApiCall} from \"./apiStatus\";\n\n//action creators\nexport function loadTrendingMoviesSuccess(trendingMovies) {\n    return {type: types.LOAD_TRENDING_MOVIES_SUCCESS, trendingMovies};\n}\n\nexport function loadPopularMoviesSuccess(popularMovies) {\n    return {type: types.LOAD_POPULAR_MOVIES_SUCCESS, popularMovies};\n}\n\nexport function setCurrentMovie(currentMovie) {\n    return {type: types.SET_CURRENT_MOVIE, currentMovie};\n}\n\n//thunks\nexport function loadTrendingMovies() {\n    return function (dispatch) {\n        dispatch(beginApiCall());\n        return HomePageApi.loadTrendingMovies()\n            .then(trendingMovies => {\n            dispatch(loadTrendingMoviesSuccess(trendingMovies));\n        })\n            .catch(error => {\n            dispatch(apiCallError(error));\n            throw error ;\n        });\n    };\n}\n\nexport function loadPopularMovies() {\n    return function (dispatch) {\n        dispatch(beginApiCall());\n        return HomePageApi\n            .loadPopularMovies()\n            .then(popularMovies => {\n            dispatch(loadPopularMoviesSuccess(popularMovies));\n        }).catch(error => {\n            dispatch(apiCallError(error));\n            throw error;\n        });\n    };\n}\n\nexport function setMovie (currentMovie){\n    return function (dispatch) {\n        dispatch(setCurrentMovie(currentMovie));\n    }\n}\n\n\n\nexport function setInputUser(searchInput) {\n    return {type: types.SEARCH_INPUT, payload:searchInput};\n}\n\nexport function searchMoviesResultsSuccess(searchResults) {\n    return {type: types.SEARCH_RESULTS_SUCCESS,searchResults:searchResults};\n}\n\nexport function setSearch (searchInput){\n    return function (dispatch) {\n        dispatch(setInputUser(searchInput));\n    }\n}\n\nexport function loadSearchResults(searchInput) {\n    return function (dispatch) {\n        dispatch(beginApiCall());\n       return HomePageApi.searchResults(searchInput)\n            .then(searchResults => {\n                dispatch(searchMoviesResultsSuccess(searchResults));\n            })\n            .catch(error => {\n                dispatch(apiCallError(error));\n                throw error;\n            });\n    };\n}\n\n\n\n","export const LOAD_TRENDING_MOVIES_SUCCESS = 'LOAD_TRENDY_MOVIES_SUCCESS ';\nexport const LOAD_POPULAR_MOVIES_SUCCESS = 'LOAD_POPULAR_MOVIES_SUCCESS ';\nexport const BEGIN_API_CALL ='BEGIN_API_CALL';\nexport const API_CALL_ERROR = 'API_CALL_ERROR';\nexport const SET_CURRENT_MOVIE = 'SET_CURRENT_MOVIE';\nexport const SEARCH_INPUT = 'SEARCH_INPUT';\nexport const SEARCH_RESULTS_SUCCESS  ='SEARCH_RESULTS_SUCCESS';\n\n","import * as types from './actionTypes'\n\nexport function beginApiCall() {\n    return{type: types.BEGIN_API_CALL}\n}\nexport function apiCallError() {\n    return{type: types.API_CALL_ERROR}\n}\n","import { handleResponse, handleError } from \"./apiUtils\";\nimport {API_KEY,BASE_URL,PROXY} from \"../utils\";\n\n\n\n\nexport function searchResults(searchInput) {\n    return fetch(`${PROXY}${BASE_URL}/search/movie/${API_KEY}&query=${searchInput}&page=1`)\n        .then(handleResponse)\n        .catch(handleError);\n}\n\nexport function loadTrendingMovies() {\n    return fetch(`${PROXY}${BASE_URL}/trending/all/day${API_KEY}`)\n        .then(handleResponse)\n        .catch(handleError);\n\n}\n\nexport function loadPopularMovies() {\n        return  fetch (`${PROXY}${BASE_URL}/movie/popular${API_KEY}&language=en-US&page=1`)\n            .then(handleResponse)\n            .catch(handleError);\n}\n\nexport function getGenreMovies() {\n    return fetch(BASE_URL)\n        .then(handleResponse)\n        .catch(handleError);\n}\n\n\n","\nimport React, {useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport {Link, useHistory} from 'react-router-dom';\nimport PropTypes from 'prop-types'\nimport * as homePageAction from \"../../redux/actions/homePageActions\";\nimport '../../assets/css/searchBar.scss'\nfunction SearchBar({\n    setSearch,\n    loadSearchResults,\n    searchInput,\n    searchResults,\n    currentPage,\n    ...props\n    }) {\n\n    const [search, setSearchUser] = useState('');\n    const history = useHistory();\n\n\n    //search and  redirect to search results\n    const searchItem = async (e) => {\n        e.preventDefault();\n\n        if (search === \"\") {\n            alert(\"please enter a movie title\")\n        } else {\n            setSearch(search);\n            loadSearchResults(search).catch(error => {\n                alert(\"loading popular\" + error)\n            })\n            history.push(`/search/${search}`);\n        }\n    }\n\n    const handleChange = (e) => {\n        setSearchUser(e.target.value);\n    };\n\n    return (\n        <div className={'search'}>\n            <form action={<Link to={'/search'}>search</Link>} onSubmit={searchItem}>\n                <input onChange={handleChange} type=\"text\" value={search} placeholder={'search for a movie'}/>\n                <button type={'submit'} onClick={searchItem}><Link to={'/search'}>search</Link></button>\n            </form>\n            <p>{props.searchInput}</p>\n        </div>\n    )\n\n}\n\nSearchBar.prototypes = {\n    setSearch: PropTypes.func.isRequired,\n    currentPage: PropTypes.number.isRequired,\n    loadSearchResults: PropTypes.func.isRequired,\n    searchInput: PropTypes.string.isRequired,\n    searchResults: PropTypes.array.isRequired,\n    actions: PropTypes.object.isRequired\n}\n\nfunction mapStateToProps(state) {\n    return {\n        currentPage: state.homePageReducer.currentPage,\n        searchInput: state.homePageReducer.searchInput,\n        searchResults: state.homePageReducer.searchResults\n    };\n}\n\n\nconst mapDispatchToProps = {\n    setSearch: homePageAction.setSearch,\n    loadSearchResults: homePageAction.loadSearchResults\n\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBar);\n","\nimport React, {useState} from \"react\";\nimport {Link, useHistory} from \"react-router-dom\";\nimport \"../../assets/css/navbar.scss\"\nimport {LOGO_NAV} from \"../../utils\";\n\nimport SearchBar from \"./searchbar\";\n\nconst Nav =()=> (\n    <div>\n     <nav className={'nav'}>\n         <div className={\"nav-links\"}>\n             <img src={LOGO_NAV} alt=\"\"/>\n             <ul>\n             <li><Link to={'/'}>home</Link></li>\n             <li><Link to={'/login'}>login</Link></li>\n             <li className={\"hide\"}><i >search</i></li>\n             </ul>\n         </div>\n         <div className={'nav-search'}>\n            <SearchBar/>\n         </div>\n     </nav>\n    </div>\n)\n\n\nexport default Nav;\n","import React from \"react\";\n\nconst Card  = (props) =>{\n    return(\n\n            <div onClick={()=> props.viewMovieInfo(props.movieId)}>\n                <div className={'cardMovie'} style={{backgroundImage: `url(${props.img})`}} />\n                <p className={\"titleMovie\"}>{props.title}</p>\n           </div>\n\n    )\n};\n\nexport default Card\n","import React from \"react\";\nimport Card from \"./Card.js\"\n\nimport {IMG_BASE_200} from \"../../utils\";\n\n\n\nconst List =({movieList,viewMovieInfo}) =>(\n    <div  className={'list'}>\n       {\n         movieList.map((movie, i) =>{\n             return <Card\n                        key={i}\n                        img={`${IMG_BASE_200}${movie.poster_path}`}\n                        title={movie.original_title}\n                        description={movie.overview}\n                        viewMovieInfo={viewMovieInfo}\n                        movieId={movie.id}\n                    />\n             })\n       }\n    </div>\n)\n\nexport default List;\n","import React from 'react';\nimport \"../../utils\"\nimport './movieProfile.scss'\n\nfunction MovieProfile(props) {\n\n    const {vote_average, release_date, backdrop_path, overview, poster_path, genre_ids, title} = props.currentMovie;\n\n    return (\n        <>\n            <div className={\"container-profile bg\"}\n                 style={{backgroundImage: `url(https://image.tmdb.org/t/p/w1280/${backdrop_path})`}}\n            >\n                <div className={'content'}>\n                    <div  className={'cross'}>\n                        <ion-icon size=\"large\" name=\"close-outline\" onClick={props.closeMovieInfo} style={{color: \"whitesmoke\", cursor: \"pointer\"}}/>\n                    </div>\n                    <div className={\"info\"}>\n                        <div className={\"profile-img\"}>\n\n\n\n                            <div className={\"img-container\"}>\n                                <img src={`https://image.tmdb.org/t/p/w500/${poster_path}`} alt={title}/>\n\n                            </div>\n                        </div>\n                        <div className=\"profile-text\">\n                            <h2>{title}</h2>\n\n\n                            <div className={'sub-title'}>\n                                <p><small>{vote_average === 0 ? \"\": `Rating: ${vote_average}` } </small></p>\n                                <p> <small>Release date: {release_date.substr(0,4)} </small></p>\n                                <p> <small> trailer </small></p>\n                            </div>\n                            <br/>\n                            <p>\n                                {\n                                    genre_ids.map(id => {\n                                        if (id === props.genre.id) {\n                                            console.log(props.genre.name);\n                                            return props.genre.name\n                                        } else {\n                                            return \"\"\n                                        }\n                                    })\n                                }\n                            </p>\n                            <p>{overview}</p>\n                        </div>\n                    </div>\n                    </div>\n                    </div>\n\n        </>\n    );\n}\n\nexport default MovieProfile;\n","\nimport React from 'react';\nimport \"./spinner.css\"\n\nconst Spinner =() =>{\n    return<div className={\"loader\"}>Loading...</div>\n};\nexport default Spinner;\n","import React, {useEffect, useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport List from \"../Components/commons/List\";\nimport {useHistory, useParams} from \"react-router-dom\";\nimport MovieProfile from \"./movieProfile/movieProfile\";\nimport Spinner from \"../Components/commons/spinner/Spinner\";\nimport PropTypes from \"prop-types\";\nimport * as homePageAction from \"../redux/actions/homePageActions\";\n\n\n\nfunction Search({\n                    setMovie,\n                    searchInput,\n                    searchResults,\n                    loadSearchResults,\n                    currentMovie\n                }) {\n    const [movieGenres, setMovieGenres] = useState([]);\n    const history = useHistory();\n    console.log(searchResults)\n    console.log(currentMovie)\n\n    const viewMovieInfo = (id) => {\n        const filteredMovie = searchResults.filter(movie => movie.id === id);\n        const newCurrentMovie = filteredMovie.length > 0 ? filteredMovie[0] : null;\n        setMovie(newCurrentMovie);\n    };\n\n    /*useEffect(()=>{\n   if(searchInput !=='') {\n       loadSearchResults(searchInput).catch(error => {\n           alert(\"loading popular\" + error)\n       })\n       history.push(`/search/${searchInput}`);\n        }\n    },[])*/\n\n    console.log(searchInput)\n    return (\n        <div>\n            { currentMovie.length <= 0\n                ?\n                <>\n\n                    {\n                        searchResults === undefined\n                            ?\n                            <>\n                                <h1>search undefined</h1>\n                                <Spinner/>\n                            </>\n                            :\n                            searchResults.length === 0\n                                ?\n                                <p>no movies found</p>\n                                :\n                                <>\n                                    <h3>Results for: {searchInput}</h3>\n                                    <List movieList={searchResults} viewMovieInfo={viewMovieInfo}/>\n                                    <div className={\"pagination-with-btn\"}>\n\n                                    </div>\n                                </>\n                    }\n\n                </>\n                :\n                <MovieProfile\n                    viewMovieInfo={viewMovieInfo}\n                    genre={movieGenres}\n                    currentMovie={currentMovie}\n                    closeMovieInfo={() => {\n                        setMovie([]);\n                    }}/>\n            }\n\n        </div>\n    )\n}\n\nSearch.prototypes = {\n    loadSearchResults: PropTypes.func.isRequired,\n    searchInput: PropTypes.string.isRequired,\n    searchResults: PropTypes.array.isRequired,\n    currentMovie: PropTypes.array.isRequired,\n    actions: PropTypes.object.isRequired,\n    setMovie: PropTypes.func.isRequired,\n}\n\nfunction mapStateToProps(state) {\n    return {\n        searchInput: state.homePageReducer.searchInput,\n        searchResults: state.homePageReducer.searchResults,\n        currentMovie: state.homePageReducer.currentMovie\n    };\n}\n\n\nconst mapDispatchToProps = {\n    loadSearchResults: homePageAction.loadSearchResults,\n    setMovie: homePageAction.setMovie\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\n","import React, {useEffect, useState} from \"react\";\nimport List from \"../Components/commons/List\";\n\nfunction Popular() {\n\n    const [popularMovies, setPopular] = useState([]);\n    const proxy = \"https://cors-anywhere.herokuapp.com/\";\n\n    //on load, load List with popular movies\n    useEffect(() => {\n        async function fetchData() {\n            const response = await fetch (`${proxy}https://api.themoviedb.org/3/movie/popular?api_key=67b347978ffe14fc5d6f8a664a1829f2&language=en-US&page=1\n `);\n\n            const popular = await response.json();\n            setPopular(popular.results);\n        }\n        fetchData();\n    }, []);\n\n\n    return(\n        <div className={'popular-container'}>\n        <h1>Popular movies</h1>\n        <List movieList={popularMovies}/>\n        </div>\n    )\n\n}\n\nexport default Popular;\n","import React from 'react';\nimport 'slick-carousel/slick/slick.css'\nimport 'slick-carousel/slick/slick-theme.css'\nimport Slider from \"react-slick\";\nimport './slick-slider.css';\n\n\nfunction SlickSlider({popularMovies}) {\n\n\n    const settings = {\n        dots: false,\n        fade: true,\n\n        speed: 200,\n\n        slidesToShow: 1,\n        autoplay: true,\n        arrows: false,\n        className: 'slides',\n\n    };\n\n    return (\n        <div className=\"App\">\n            <Slider {...settings}>\n                {\n                    popularMovies.map((movie, i) => {\n                        return <div key={i}>\n                            <div className=\"carousel-item\" key={i} style={{backgroundImage: `url(https://image.tmdb.org/t/p/w1280/${movie.backdrop_path})`}}>\n                                <div className={'slider-text'}>\n                                    <h1>Movie DB</h1>\n                                    <h3>browse through the biggest movie library</h3>\n                                    <ion-icon size={\"large\"} name=\"arrow-down\"/>\n                                </div>\n                            </div>\n                        </div>\n                    })\n                }\n            </Slider>\n        </div>\n    );\n}\n\nexport default SlickSlider;\n","import React, {useEffect} from \"react\";\nimport {connect} from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport List from \"../Components/commons/List\";\nimport MovieProfile from './movieProfile/movieProfile';\nimport SlickSlider from \"../Components/slick-slider/slick-slider\";\nimport * as homePageAction from \"../redux/actions/homePageActions\";\nimport \"./App.scss\"\n\nimport Spinner from \"../Components/commons/spinner/Spinner\";\n\n\nfunction HomePage({\n    loadPopularMovies,\n    loadTrendingMovies,\n    setMovie,\n    popularMovies,\n    trendingMovies,\n    currentMovie,\n    }) {\n\n\n    useEffect(() => {\n        if (popularMovies === undefined ||popularMovies.length === 0) {\n            loadPopularMovies()\n                .catch(error => {\n                    alert(\"loading popular\" + error)\n                })\n        }\n        if (trendingMovies === undefined || trendingMovies.length ===0) {\n            loadTrendingMovies()\n                .catch(error => {\n                    alert(\"loading trending movies\" + error)\n                })\n        }\n\n    }, [trendingMovies, popularMovies, loadTrendingMovies, loadPopularMovies])\n\n\n\n    const viewMovieInfo = (id) => {\n        const filteredMovie = popularMovies.filter(movie => movie.id === id);\n        const newCurrentMovie = filteredMovie.length > 0 ? filteredMovie[0] : null;\n        setMovie(newCurrentMovie);\n\n    };\n\n\n\n\n\n\n    return (\n        <>\n            {\n                currentMovie.length <= 0\n                    ?\n                    popularMovies === undefined  || trendingMovies === undefined\n                        ?\n                        <Spinner/>\n                        :\n                        <>\n                            <SlickSlider\n                            popularMovies={popularMovies}/>\n                            <h1>Popular movies</h1>\n                            <List\n                                movieList={popularMovies}\n                                viewMovieInfo={viewMovieInfo}\n                            />\n                        </>\n                    :\n                    <MovieProfile\n                        viewMovieInfo={viewMovieInfo}\n                        genre={\"movieGenres\"}\n                        currentMovie={currentMovie}\n                        closeMovieInfo={() => {\n                            setMovie([]);\n                        }}/>\n\n\n\n            }\n        </>\n    )\n}\n\nHomePage.prototypes = {\n    loadPopularMovies: PropTypes.func.isRequired,\n    loadTrendingMovies: PropTypes.func.isRequired,\n    setMovie:  PropTypes.func.isRequired,\n    popularMovies: PropTypes.array.isRequired,\n    trendingMovies: PropTypes.object.isRequired,\n    apiStatusReducer: PropTypes.number.isRequired,\n    loading: PropTypes.bool.isRequired,\n    currentMovie:  PropTypes.array.isRequired\n}\n\nfunction mapStateToProps(state, ownProps) {\n    return {\n        trendingMovies: state.homePageReducer.trendingMovies,\n        popularMovies: state.homePageReducer.popularMovies,\n        currentMovie: state.homePageReducer.currentMovie,\n        loading: state.apiCallsInProgress > 0\n\n    };\n}\n\nconst mapDispatchToProps = {\n    loadPopularMovies: homePageAction.loadPopularMovies,\n    loadTrendingMovies: homePageAction.loadTrendingMovies,\n    setMovie:  homePageAction.setMovie\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\n\n\n\n\n","import React from 'react'\n\nconst PageNotFound = () => <h1>Oops! page not found.</h1>;\n\nexport default PageNotFound\n","import React from \"react\";\nimport {Switch, Route} from 'react-router-dom';\nimport Search from \"../src/pages/search\"\nimport Popular from \"../src/pages/popular\"\nimport Homepage from \"./pages/Homepage\"\nimport PageNotFound from \"./pages/PageNotFound\"\nimport MovieProfile from \"./pages/movieProfile/movieProfile\";\n\nconst Routes = () =>{\n    return(\n        <Switch>\n            <Route exact path=\"/\" component={Homepage}/>\n           {/* <Route exact path=\"/:MovieProfile\" component={MovieProfile()}/>*/}\n            <Route exact path=\"/popular\" component={Popular}/>\n            <Route exact path=\"/Movie-browse\" component={Homepage}/>\n            <Route exact path=\"/top5\"/>\n            <Route path=\"/search/:name\" component={Search}/>\n            <Route path=\"/movieProfile/:currentMovie\" component={MovieProfile}/>\n            <Route component={PageNotFound}/>\n        </Switch>\n    )\n};\n\nexport default Routes;\n","import React from 'react';\nimport Nav from \"./Components/commons/nav\";\nimport Routes from \"./routes\";\nimport './App.css';\n\n  export function App() {\n          return (\n              <div className=\"App\">\n                  <Nav/>\n                  <Routes/>\n              </div>\n          )\n    }\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export default {\n    searchInput:'',\n    currentPage: 1,\n    currentMovieProfile:  null,\n    apiCallsInProgress: 0,\n    currentMovie:[],\n    loading: false,\n\n};\n","import * as types from '../actions/actionTypes'\nimport initialState from \"./initialState\";\n\nfunction actionTypeEndsInSuccess(type) {\n  return type.substring(type.length -8 ) === '_SUCCESS';\n}\n\nexport default function apiCallStatusReducer(\n    state = initialState.apiCallsInProgress,\n    action) {\n  if(action.type === types.BEGIN_API_CALL){\n    return state + 1;\n  }\n  if(actionTypeEndsInSuccess(action.type)){\n    return state -1\n  }\n  else if (action.type === types.API_CALL_ERROR ){\n    return state -1\n  }\n    return state\n}\n","import {combineReducers} from \"redux\";\nimport homePageReducer from \"./homePageReducer\";\nimport apiStatusReducer from \"./apiStatusReducer\";\nimport searchReducer from \"./searchReducer\"\nconst rootReducer = combineReducers({\n    homePageReducer,\n    apiStatusReducer,\n\n});\nexport default rootReducer;\n","import * as types from \"../actions/actionTypes\";\nimport initialState from \"./initialState\";\n\nexport default function homePageReducer(state = initialState, action) {\n    switch (action.type) {\n        case types.LOAD_TRENDING_MOVIES_SUCCESS:\n            return {...state, trendingMovies: action.trendingMovies.results};\n        case types.SET_CURRENT_MOVIE:\n            return {...state,currentMovie: action.currentMovie};\n        case types.LOAD_POPULAR_MOVIES_SUCCESS:\n            return {...state, popularMovies: action.popularMovies.results};\n        case types.SEARCH_INPUT:\n            return {...state,  searchInput: action.payload};\n        case types.SEARCH_RESULTS_SUCCESS:\n            return {...state, searchResults: action.searchResults.results};\n        default:\n            return state;\n    }\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {HashRouter} from \"react-router-dom\";\nimport configureStore from \"./redux/configureStore\";\n\n//provider is a higher order component that provides  your redux data to child components\nimport {Provider as ReduxProvider} from 'react-redux'\n\nlet  store = configureStore();\n\nReactDOM.render(\n\n      <HashRouter>\n          <ReduxProvider store={store}>\n            <App />\n          </ReduxProvider>\n      </HashRouter>\n\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {createStore, applyMiddleware, compose} from \"redux\";\nimport rootReducer from \"./reducers/rootReducer\";\nimport reduxImmutableStateInvariant from 'redux-immutable-state-invariant'\nimport thunk from \"redux-thunk\";\nimport logger from 'redux-logger'\nexport default function configureStore(initialState) {\n\n    //this adds support for redux dev tools, this const gives us a funtion that we can call\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n    return createStore(\n        rootReducer,\n        initialState,\n        composeEnhancers(applyMiddleware(thunk,reduxImmutableStateInvariant(),logger))\n    );\n}\n//configureStore takes in initial state as parameter so we have some data\n//middleware  is  a way to enhance redux with extra functionality, 3rd parameter for create store  accepts the middlewarefunction\n//reduxImmutableStateInvariant() will warn you if you accidentally mutate  any state directly inside the store\n"],"sourceRoot":""}