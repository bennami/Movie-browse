{"version":3,"sources":["utils.js","Api/apiUtils.js","redux/actions/homePageActions.js","redux/actions/actionTypes.js","redux/actions/apiStatus.js","Api/movieApi.js","Components/commons/searchbar.js","Components/commons/nav.js","Components/commons/card/Card.js","Components/commons/List.js","pages/movieProfile/movieProfile.js","Components/commons/spinner/Spinner.js","pages/search.js","pages/popular.js","Components/slick-slider/slick-slider.js","pages/Homepage.js","pages/PageNotFound.js","routes.js","App.js","serviceWorker.js","redux/reducers/initialState.js","redux/reducers/apiStatusReducer.js","redux/reducers/rootReducer.js","redux/reducers/homePageReducer.js","index.js","redux/configureStore.js"],"names":["API_KEY","BASE_URL","VIDEO_LINK","PROXY","handleResponse","response","a","ok","console","log","json","status","text","error","Error","handleError","setMovie","currentMovie","dispatch","type","setCurrentMovie","setSearch","searchInput","payload","setInputUser","loadSearchResults","fetch","then","catch","HomePageApi","searchResults","searchMoviesResultsSuccess","SearchBar","props","currentPage","useState","search","setSearchUser","history","useHistory","searchItem","e","preventDefault","alert","push","className","action","to","onSubmit","onChange","target","value","placeholder","onClick","prototypes","PropTypes","func","isRequired","number","string","array","actions","object","mapDispatchToProps","homePageAction","connect","state","homePageReducer","Nav","src","alt","Card","viewMovieInfo","movieId","style","backgroundImage","img","title","List","movieList","map","movie","i","key","poster_path","original_title","description","overview","id","MovieProfile","closeMovieInfo","genre","vote_average","searchTrailer","release_date","backdrop_path","genre_ids","mov","setMov","trailer","setTrailer","url","axios","get","data","results","channel","isOpen","videoId","onClose","size","name","color","cursor","substr","searchTrailerSuccess","ownProps","Spinner","Search","movieGenres","useParams","useEffect","filteredMovie","filter","newCurrentMovie","length","undefined","Popular","popularMovies","setPopular","proxy","popular","fetchData","SlickSlider","settings","dots","fade","speed","slidesToShow","autoplay","arrows","href","HomePage","loadPopularMovies","loadTrendingMovies","trendingMovies","apiStatusReducer","loading","bool","loadPopularMoviesSuccess","loadTrendingMoviesSuccess","apiCallsInProgress","PageNotFound","Routes","exact","path","component","Homepage","App","Boolean","window","location","hostname","match","currentMovieProfile","actionTypeEndsInSuccess","substring","rootReducer","combineReducers","initialState","store","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","reduxImmutableStateInvariant","logger","configureStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.487d70a4.chunk.js","sourcesContent":["\nexport const API_KEY = '?api_key=67b347978ffe14fc5d6f8a664a1829f2';\nexport const BASE_URL = 'https://api.themoviedb.org/3';\nexport const VIDEO_LINK = 'https://api.themoviedb.org/3/movie/';\nexport const PROXY = 'https://cors-anywhere.herokuapp.com/';\nexport const URL_DETAIL = 'https://api.themoviedb.org/3/movie/';\nexport const URL_SEARCH = `https://api.themoviedb.org/3/search/movie${API_KEY}?query=`;\nexport const IMG_SIZE_45 = 'https://image.tmdb.org/t/p/w45/';\nexport const IMG_BASE_200 = 'https://image.tmdb.org/t/p/w200/';\nexport const IMG_BASE_1280 = 'https://image.tmdb.org/t/p/w1280/';\nexport const LOGO_NAV = 'https://www.themoviedb.org/assets/1/v4/logos/primary-green-d70eebe18a5eb5b166d5c1ef0796715b8d1a2cbc698f96d311d62f894ae87085.svg';\n\n\n\n\n","export async function handleResponse(response) {\n    if (response.ok){\n        console.log('fetch success')\n        return response.json();}\n    if (response.status === 400) {\n        const error = await response.text();\n        console.log(error);\n        throw new Error('404 error');\n    }\n    throw new Error(\"response failed\");\n}\n\nexport function handleError(error) {\n\n    console.error(\"API call failed. \" + error);\n    throw error;\n}\n","import * as types from \"./actionTypes\";\nimport * as HomePageApi from \"../../Api/movieApi\";\nimport {apiCallError, beginApiCall} from \"./apiStatus\";\n\n//action creators\nexport function loadTrendingMoviesSuccess(trendingMovies) {\n    return {type: types.LOAD_TRENDING_MOVIES_SUCCESS, trendingMovies};\n}\n\nexport function loadPopularMoviesSuccess(popularMovies) {\n    return {type: types.LOAD_POPULAR_MOVIES_SUCCESS, popularMovies};\n}\n\nexport function setCurrentMovie(currentMovie) {\n    return {type: types.SET_CURRENT_MOVIE, currentMovie};\n}\n\nexport function setInputUser(searchInput) {\n    return {type: types.SEARCH_INPUT, payload:searchInput};\n}\n\nexport function searchMoviesResultsSuccess(searchResults) {\n    return {type: types.SEARCH_RESULTS_SUCCESS,searchResults:searchResults};\n}\nexport function searchTrailerSuccess(trailer) {\n    return {type: types.SEARCH_TRAILER_SUCCESS,trailer}\n}\n\n//thunks\nexport function loadTrendingMovies() {\n    return function (dispatch) {\n        dispatch(beginApiCall());\n        return HomePageApi.loadTrendingMovies()\n            .then(trendingMovies => {\n            dispatch(loadTrendingMoviesSuccess(trendingMovies));\n        })\n            .catch(error => {\n            dispatch(apiCallError(error));\n            throw error ;\n        });\n    };\n}\n\nexport function loadPopularMovies() {\n    return function (dispatch) {\n        dispatch(beginApiCall());\n        return HomePageApi\n            .loadPopularMovies()\n            .then(popularMovies => {\n            dispatch(loadPopularMoviesSuccess(popularMovies));\n        }).catch(error => {\n            dispatch(apiCallError(error));\n            throw error;\n        });\n    };\n}\n\nexport function setMovie (currentMovie){\n    return function (dispatch) {\n        dispatch(setCurrentMovie(currentMovie));\n    }\n}\n\nexport function setSearch (searchInput){\n    return function (dispatch) {\n        dispatch(setInputUser(searchInput));\n    }\n}\n\nexport function loadSearchResults(searchInput) {\n    return function (dispatch) {\n        dispatch(beginApiCall());\n       return HomePageApi.searchResults(searchInput)\n            .then(searchResults => {\n                dispatch(searchMoviesResultsSuccess(searchResults));\n            })\n            .catch(error => {\n                dispatch(apiCallError(error));\n                throw error;\n            });\n    };\n}\n\nexport function searchTrailer(id) {\n    return function (dispatch) {\n        dispatch(beginApiCall());\n        return HomePageApi.loadTrailer(id)\n            .then(trailer =>{\n                dispatch(searchTrailerSuccess(trailer));\n            })\n            .catch(\n                error => {\n                    dispatch(apiCallError(error));\n                    throw error;\n                });\n    };\n}\n\n\n\n","export const LOAD_TRENDING_MOVIES_SUCCESS = 'LOAD_TRENDY_MOVIES_SUCCESS ';\nexport const LOAD_POPULAR_MOVIES_SUCCESS = 'LOAD_POPULAR_MOVIES_SUCCESS ';\nexport const BEGIN_API_CALL ='BEGIN_API_CALL';\nexport const API_CALL_ERROR = 'API_CALL_ERROR';\nexport const SET_CURRENT_MOVIE = 'SET_CURRENT_MOVIE';\nexport const SEARCH_INPUT = 'SEARCH_INPUT';\nexport const SEARCH_RESULTS_SUCCESS  ='SEARCH_RESULTS_SUCCESS';\nexport const SEARCH_TRAILER_SUCCESS  = 'SEARCH_TRAILER_SUCCESS';\n\n\n","import * as types from './actionTypes'\n\nexport function beginApiCall() {\n    return{type: types.BEGIN_API_CALL}\n}\nexport function apiCallError() {\n    return{type: types.API_CALL_ERROR}\n}\n","import { handleResponse, handleError } from \"./apiUtils\";\nimport {API_KEY, BASE_URL, PROXY, VIDEO_LINK} from \"../utils\";\n\nexport function searchResults(searchInput) {\n    return fetch(`${PROXY}${BASE_URL}/search/movie/${API_KEY}&query=${searchInput}&page=1`)\n        .then(handleResponse)\n        .catch(handleError);\n}\n\nexport function loadTrendingMovies() {\n    return fetch(`${PROXY}${BASE_URL}/trending/all/day${API_KEY}`)\n        .then(handleResponse)\n        .catch(handleError);\n\n}\n\nexport function loadPopularMovies() {\n        return  fetch (`${PROXY}${BASE_URL}/movie/popular${API_KEY}&language=en-US&page=1`)\n            .then(handleResponse)\n            .catch(handleError);\n}\n\n//id  is currentMovie.id\nexport function loadTrailer(id) {\n    return fetch(`${VIDEO_LINK}${id}/videos/${API_KEY}`)\n        .then(handleResponse)\n        .catch(handleError);\n\n}\n\n\nexport function getGenreMovies() {\n    return fetch(BASE_URL)\n        .then(handleResponse)\n        .catch(handleError);\n}\n\n\n","\nimport React, {useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport {Link, useHistory} from 'react-router-dom';\nimport PropTypes from 'prop-types'\nimport * as homePageAction from \"../../redux/actions/homePageActions\";\nimport '../../assets/css/searchBar.scss'\nfunction SearchBar({\n    setSearch,\n    loadSearchResults,\n    searchInput,\n    searchResults,\n    currentPage,\n    ...props\n    }) {\n\n    const [search, setSearchUser] = useState('');\n    const history = useHistory();\n\n\n    //search and  redirect to search results\n    const searchItem = async (e) => {\n        e.preventDefault();\n\n        if (search === \"\") {\n            alert(\"please enter a movie title\")\n        } else {\n            setSearch(search);\n            loadSearchResults(search).catch(error => {\n                alert(\"loading popular\" + error)\n            })\n            history.push(`/search/${search}`);\n        }\n    }\n\n    const handleChange = (e) => {\n        setSearchUser(e.target.value);\n    };\n\n    return (\n        <div className={'search'}>\n            <form action={<Link to={'/search'}>search</Link>} onSubmit={searchItem}>\n                <input onChange={handleChange} type=\"text\" value={search} placeholder={'search for a movie'}/>\n                <button type={'submit'} onClick={searchItem}><Link to={'/search'}>search</Link></button>\n            </form>\n            <p>{props.searchInput}</p>\n        </div>\n    )\n\n}\n\nSearchBar.prototypes = {\n    setSearch: PropTypes.func.isRequired,\n    currentPage: PropTypes.number.isRequired,\n    loadSearchResults: PropTypes.func.isRequired,\n    searchInput: PropTypes.string.isRequired,\n    searchResults: PropTypes.array.isRequired,\n    actions: PropTypes.object.isRequired\n}\n\nfunction mapStateToProps(state) {\n    return {\n        currentPage: state.homePageReducer.currentPage,\n        searchInput: state.homePageReducer.searchInput,\n        searchResults: state.homePageReducer.searchResults\n    };\n}\n\n\nconst mapDispatchToProps = {\n    setSearch: homePageAction.setSearch,\n    loadSearchResults: homePageAction.loadSearchResults\n\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBar);\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport \"../../assets/css/navbar.scss\"\nimport {LOGO_NAV} from \"../../utils\";\n\nimport SearchBar from \"./searchbar\";\n\nconst Nav =()=> (\n    <div>\n     <nav className={'nav'}>\n         <div className={\"nav-links\"}>\n             <img src={LOGO_NAV} alt=\"\"/>\n             <ul>\n             <li><Link to={'/'}>home</Link></li>\n             <li><Link to={'/login'}>login</Link></li>\n             <li className={\"hide\"}><i >search</i></li>\n             </ul>\n         </div>\n         <div className={'nav-search'}>\n            <SearchBar/>\n         </div>\n     </nav>\n    </div>\n)\n\n\nexport default Nav;\n","import React from \"react\";\nimport  \"./card.scss\";\n\nconst Card  = (props) =>{\n    return(\n\n            <div onClick={()=> props.viewMovieInfo(props.movieId)}>\n                <div className={'cardMovie'} style={{backgroundImage: `url(${props.img})`}} />\n                <p className={\"titleMovie\"}>{props.title}</p>\n           </div>\n\n    )\n};\n\nexport default Card\n","import React from \"react\";\nimport Card from \"./card/Card.js\"\n\nimport {IMG_BASE_200} from \"../../utils\";\n\n\n\nconst List =({movieList,viewMovieInfo}) =>(\n    <div  className={'list'}>\n       {\n         movieList.map((movie, i) =>{\n             return <Card\n                        key={i}\n                        img={`${IMG_BASE_200}${movie.poster_path}`}\n                        title={movie.original_title}\n                        description={movie.overview}\n                        viewMovieInfo={viewMovieInfo}\n                        movieId={movie.id}\n                    />\n             })\n       }\n    </div>\n)\n\nexport default List;\n","import React, {useEffect, useState} from 'react';\nimport \"../../utils\";\nimport {connect} from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport * as homePageAction from \"../../redux/actions/homePageActions\";\nimport './movieProfile.scss'\nimport axios from \"axios\";\nimport{VIDEO_LINK,API_KEY} from \"../../utils\";\nimport ModalVideo from \"react-modal-video\";\nimport 'react-modal-video/scss/modal-video.scss';\n\nfunction MovieProfile({closeMovieInfo,currentMovie,genre,searchTrailer}) {\n\n    const {vote_average, id, release_date, backdrop_path, overview, poster_path, genre_ids, title} = currentMovie;\n\nconst [mov,setMov] = useState('');\nconst [trailer,setTrailer]=useState(false);\n\n   async function checkTrailer(){\n        if(mov === ''){\n            const url = `${VIDEO_LINK}${id}/videos${API_KEY}`;\n            axios.get(url).then(response => {\n                setMov( response.data.results[0].key );\n\n            });\n\n        }\n        setTrailer(true);\n\n\n        /* if(trailer=== undefined){\n             searchTrailer(id).catch(error => {\n                 alert(\"loading popular\" + error)\n             });\n         }*/\n\n     }\n    console.log(mov)\n    return (\n        <>\n           <div className={\"container-profile bg\"}\n                style={{backgroundImage: `url(https://image.tmdb.org/t/p/w1280/${backdrop_path})`}}\n           >\n\n\n\n                    <div className={'content'}>\n                            {\n                                trailer\n                                    ?\n                                    <ModalVideo\n                                        channel=\"youtube\"\n                                        isOpen={trailer}\n                                        videoId={mov}\n                                        onClose={() => setTrailer(false)}\n\n                                    />\n\n                                    :''}\n                        <div  className={'cross'}>\n                            <ion-icon size=\"large\" name=\"close-outline\" onClick={closeMovieInfo} style={{color: \"whitesmoke\", cursor: \"pointer\"}}/>\n                        </div>\n                        <div className={\"info\"}>\n                            <div className={\"profile-img\"}>\n\n\n\n                                <div className={\"img-container\"}>\n                                    <img src={`https://image.tmdb.org/t/p/w500/${poster_path}`} alt={title}/>\n\n                                </div>\n                            </div>\n                            <div className=\"profile-text\">\n                                <h2>{title}</h2>\n\n\n                                <div className={'sub-title'}>\n                                    <p><small>{vote_average === 0 ? \"\": `Rating: ${vote_average}` } </small></p>\n                                    <p  className={trailer}> <small>Release date: {release_date.substr(0,4)} </small></p>\n                                    <p  onClick={checkTrailer}> <small> trailer </small></p>\n                                </div>\n                                <br/>\n                                <p>\n                                    {\n                                        genre_ids.map(id => {\n                                            if (id === genre.id) {\n                                                console.log(genre.name);\n                                                return genre.name\n                                            } else {\n                                                return \"\"\n                                            }\n                                        })\n                                    }\n                                </p>\n                                <p>{overview}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n        </>\n\n\n\n    )\n}\nMovieProfile.prototypes = {\n    trailer: PropTypes.array.isRequired,\n    searchTrailer: PropTypes.func.isRequired,\n}\n\nfunction mapStateToProps(state,ownProps) {\n    return {\n        trailer: state.homePageReducer.trailer,\n    };\n}\n\nconst mapDispatchToProps = {\n    searchTrailer:  homePageAction.searchTrailer()\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(MovieProfile);\n","\nimport React from 'react';\nimport \"./spinner.css\"\n\nconst Spinner =() =>{\n    return<div className={\"loader\"}>Loading...</div>\n};\nexport default Spinner;\n","import React, {useEffect, useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport List from \"../Components/commons/List\";\nimport {useHistory, useParams} from \"react-router-dom\";\nimport MovieProfile from \"./movieProfile/movieProfile\";\nimport Spinner from \"../Components/commons/spinner/Spinner\";\nimport PropTypes from \"prop-types\";\nimport * as homePageAction from \"../redux/actions/homePageActions\";\n\nfunction Search({\n                    setMovie,\n                    searchInput,\n                    searchResults,\n                    loadSearchResults,\n                    currentMovie,\n                    setSearch\n                }) {\n    const [movieGenres, setMovieGenres] = useState([]);\n    const history = useHistory();\n    const {name} = useParams();\n\n  useEffect(()=>{\n      setSearch(name)\n     if(searchInput !=='') {\n         loadSearchResults(searchInput).catch(error => {\n             alert(\"loading popular\" + error)\n         })\n         history.push(`/search/${searchInput}`);\n     }\n  },[searchInput]);\n\n    const viewMovieInfo = (id) => {\n        const filteredMovie = searchResults.filter(movie => movie.id === id);\n        const newCurrentMovie = filteredMovie.length > 0 ? filteredMovie[0] : null;\n        setMovie(newCurrentMovie);\n    };\n\n    console.log(searchInput)\n    return (\n        <div>\n            { currentMovie.length <= 0\n                ?\n                <>\n\n                    {\n                        searchResults === undefined\n                            ?\n                            <>\n                                <Spinner/>\n                            </>\n                            :\n                            searchResults.length === 0\n                                ?\n                                <p>no movies found</p>\n                                :\n                                <>\n                                    <h3>Results for: {searchInput}</h3>\n                                    <List movieList={searchResults} viewMovieInfo={viewMovieInfo}/>\n                                    <div className={\"pagination-with-btn\"}>\n\n                                    </div>\n                                </>\n                    }\n\n                </>\n                :\n                <MovieProfile\n                    viewMovieInfo={viewMovieInfo}\n                    genre={movieGenres}\n                    currentMovie={currentMovie}\n                    closeMovieInfo={() => {\n                        setMovie([]);\n                    }}/>\n            }\n\n        </div>\n    )\n}\n\nSearch.prototypes = {\n    loadSearchResults: PropTypes.func.isRequired,\n    setSearch:PropTypes.func.isRequired,\n    searchInput: PropTypes.string.isRequired,\n    searchResults: PropTypes.array.isRequired,\n    currentMovie: PropTypes.array.isRequired,\n    actions: PropTypes.object.isRequired,\n    setMovie: PropTypes.func.isRequired,\n}\n\nfunction mapStateToProps(state) {\n    return {\n        searchInput: state.homePageReducer.searchInput,\n        searchResults: state.homePageReducer.searchResults,\n        currentMovie: state.homePageReducer.currentMovie\n    };\n}\n\n\nconst mapDispatchToProps = {\n    loadSearchResults: homePageAction.loadSearchResults,\n    setSearch: homePageAction.setSearch,\n    setMovie: homePageAction.setMovie\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\n","import React, {useEffect, useState} from \"react\";\nimport List from \"../Components/commons/List\";\n\nfunction Popular() {\n\n    const [popularMovies, setPopular] = useState([]);\n    const proxy = \"https://cors-anywhere.herokuapp.com/\";\n\n    //on load, load List with popular movies\n    useEffect(() => {\n        async function fetchData() {\n            const response = await fetch (`${proxy}https://api.themoviedb.org/3/movie/popular?api_key=67b347978ffe14fc5d6f8a664a1829f2&language=en-US&page=1\n `);\n\n            const popular = await response.json();\n            setPopular(popular.results);\n        }\n        fetchData();\n    }, []);\n\n\n    return(\n        <div className={'popular-container'}>\n        <h1>Popular movies</h1>\n        <List movieList={popularMovies}/>\n        </div>\n    )\n\n}\n\nexport default Popular;\n","import React from 'react';\nimport 'slick-carousel/slick/slick.css'\nimport 'slick-carousel/slick/slick-theme.css'\nimport Slider from \"react-slick\";\nimport './slick-slider.css';\n\n\nfunction SlickSlider({popularMovies}) {\n\n\n    const settings = {\n        dots: false,\n        fade: true,\n\n        speed: 200,\n\n        slidesToShow: 1,\n        autoplay: true,\n        arrows: false,\n        className: 'slides',\n\n    };\n\n    return (\n        <div className=\"App\">\n            <Slider {...settings}>\n                {\n                    popularMovies.map((movie, i) => {\n                        return <div key={i}>\n                            <div className=\"carousel-item\" key={i} style={{backgroundImage: `url(https://image.tmdb.org/t/p/w1280/${movie.backdrop_path})`}}>\n                                <div className={'slider-text'}>\n                                    <h1>Movie DB</h1>\n                                    <h3>browse through the biggest movie library</h3>\n                                    <a href=\"#popularSection\"><ion-icon size={\"large\"} name=\"arrow-down\"/>\n                                    </a>\n                                </div>\n                            </div>\n                        </div>\n                    })\n                }\n            </Slider>\n        </div>\n    );\n}\n\nexport default SlickSlider;\n","import React, {useEffect} from \"react\";\nimport {connect} from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport List from \"../Components/commons/List\";\nimport MovieProfile from './movieProfile/movieProfile';\nimport SlickSlider from \"../Components/slick-slider/slick-slider\";\nimport * as homePageAction from \"../redux/actions/homePageActions\";\nimport \"./App.scss\"\nimport Spinner from \"../Components/commons/spinner/Spinner\";\n\nfunction HomePage({\n    loadPopularMovies,\n    loadTrendingMovies,\n    setMovie,\n    popularMovies,\n    trendingMovies,\n    currentMovie,\n    }) {\n\n    useEffect(() => {\n        if (popularMovies === undefined ||popularMovies.length === 0) {\n            loadPopularMovies()\n                .catch(error => {\n                    alert(\"loading popular\" + error)\n                })\n        }\n        if (trendingMovies === undefined || trendingMovies.length ===0) {\n            loadTrendingMovies()\n                .catch(error => {\n                    alert(\"loading trending movies\" + error)\n                })\n        }\n\n    }, [trendingMovies, popularMovies, loadTrendingMovies, loadPopularMovies])\n\n    const viewMovieInfo = (id) => {\n        const filteredMovie = popularMovies.filter(movie => movie.id === id);\n        const newCurrentMovie = filteredMovie.length > 0 ? filteredMovie[0] : null;\n        setMovie(newCurrentMovie);\n\n    };\n\n\n    return (\n        <>\n            {\n                currentMovie.length <= 0\n                    ?\n                    popularMovies === undefined  || trendingMovies === undefined\n                        ?\n                        <Spinner/>\n                        :\n                        <>\n                            <SlickSlider\n                            popularMovies={popularMovies}/>\n                            <h1 id=\"popularSection\">Popular movies</h1>\n                            <List\n\n                                movieList={popularMovies}\n                                viewMovieInfo={viewMovieInfo}\n                            />\n                        </>\n                    :\n                    <MovieProfile\n                        viewMovieInfo={viewMovieInfo}\n                        genre={\"movieGenres\"}\n                        currentMovie={currentMovie}\n                        closeMovieInfo={() => {\n                            setMovie([]);\n                        }}/>\n            }\n        </>\n    )\n}\n\nHomePage.prototypes = {\n    loadPopularMovies: PropTypes.func.isRequired,\n    loadTrendingMovies: PropTypes.func.isRequired,\n    setMovie:  PropTypes.func.isRequired,\n    popularMovies: PropTypes.array.isRequired,\n    trendingMovies: PropTypes.object.isRequired,\n    apiStatusReducer: PropTypes.number.isRequired,\n    loading: PropTypes.bool.isRequired,\n    currentMovie:  PropTypes.array.isRequired\n}\n\nfunction mapStateToProps(state, ownProps) {\n    return {\n        trendingMovies: state.homePageReducer.trendingMovies,\n        popularMovies: state.homePageReducer.popularMovies,\n        currentMovie: state.homePageReducer.currentMovie,\n        loading: state.apiCallsInProgress > 0\n\n    };\n}\n\nconst mapDispatchToProps = {\n    loadPopularMovies: homePageAction.loadPopularMovies,\n    loadTrendingMovies: homePageAction.loadTrendingMovies,\n    setMovie:  homePageAction.setMovie\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\n\n\n\n\n","import React from 'react'\n\nconst PageNotFound = () => <h1>Oops! page not found.</h1>;\n\nexport default PageNotFound\n","import React from \"react\";\nimport {Switch, Route} from 'react-router-dom';\nimport Search from \"../src/pages/search\"\nimport Popular from \"../src/pages/popular\"\nimport Homepage from \"./pages/Homepage\"\nimport PageNotFound from \"./pages/PageNotFound\"\nimport MovieProfile from \"./pages/movieProfile/movieProfile\";\n\nconst Routes = () =>{\n    return(\n        <Switch>\n            <Route exact path=\"/\" component={Homepage}/>\n            <Route exact path=\"/popular\" component={Popular}/>\n            <Route exact path=\"/Movie-browse\" component={Homepage}/>\n            <Route exact path=\"/top5\"/>\n            <Route path=\"/search/:name\" component={Search}/>\n            <Route path=\"/movieProfile/:currentMovie\" component={MovieProfile}/>\n            <Route component={PageNotFound}/>\n        </Switch>\n    )\n};\n\nexport default Routes;\n","import React from 'react';\nimport Nav from \"./Components/commons/nav\";\nimport Routes from \"./routes\";\nimport './App.css';\n\n  export function App() {\n          return (\n              <div className=\"App\">\n                  <Nav/>\n                  <Routes/>\n              </div>\n          )\n    }\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export default {\n    searchInput:'',\n    currentPage: 1,\n    currentMovieProfile:  null,\n    apiCallsInProgress: 0,\n    currentMovie:[],\n    loading: false,\n\n};\n","import * as types from '../actions/actionTypes'\nimport initialState from \"./initialState\";\n\nfunction actionTypeEndsInSuccess(type) {\n  return type.substring(type.length -8 ) === '_SUCCESS';\n}\n\nexport default function apiCallStatusReducer(\n    state = initialState.apiCallsInProgress,\n    action) {\n  if(action.type === types.BEGIN_API_CALL){\n    return state + 1;\n  }\n  if(actionTypeEndsInSuccess(action.type)){\n    return state -1\n  }\n  else if (action.type === types.API_CALL_ERROR ){\n    return state -1\n  }\n    return state\n}\n","import {combineReducers} from \"redux\";\nimport homePageReducer from \"./homePageReducer\";\nimport apiStatusReducer from \"./apiStatusReducer\";\nimport searchReducer from \"./searchReducer\"\nconst rootReducer = combineReducers({\n    homePageReducer,\n    apiStatusReducer,\n\n});\nexport default rootReducer;\n","import * as types from \"../actions/actionTypes\";\nimport initialState from \"./initialState\";\n\nexport default function homePageReducer(state = initialState, action) {\n    switch (action.type) {\n        case types.LOAD_TRENDING_MOVIES_SUCCESS:\n            return {...state, trendingMovies: action.trendingMovies.results};\n        case types.SET_CURRENT_MOVIE:\n            return {...state,currentMovie: action.currentMovie};\n        case types.LOAD_POPULAR_MOVIES_SUCCESS:\n            return {...state, popularMovies: action.popularMovies.results};\n        case types.SEARCH_INPUT:\n            return {...state,  searchInput: action.payload};\n        case types.SEARCH_RESULTS_SUCCESS:\n            return {...state, searchResults: action.searchResults.results};\n        default:\n            return state;\n    }\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {HashRouter} from \"react-router-dom\";\nimport configureStore from \"./redux/configureStore\";\n\n//provider is a higher order component that provides  your redux data to child components\nimport {Provider as ReduxProvider} from 'react-redux'\n\nlet  store = configureStore();\n\nReactDOM.render(\n\n      <HashRouter>\n          <ReduxProvider store={store}>\n            <App />\n          </ReduxProvider>\n      </HashRouter>\n\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {createStore, applyMiddleware, compose} from \"redux\";\nimport rootReducer from \"./reducers/rootReducer\";\nimport reduxImmutableStateInvariant from 'redux-immutable-state-invariant'\nimport thunk from \"redux-thunk\";\nimport logger from 'redux-logger'\nexport default function configureStore(initialState) {\n\n    //this adds support for redux dev tools, this const gives us a funtion that we can call\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n    return createStore(\n        rootReducer,\n        initialState,\n        composeEnhancers(applyMiddleware(thunk,reduxImmutableStateInvariant(),logger))\n    );\n}\n//configureStore takes in initial state as parameter so we have some data\n//middleware  is  a way to enhance redux with extra functionality, 3rd parameter for create store  accepts the middlewarefunction\n//reduxImmutableStateInvariant() will warn you if you accidentally mutate  any state directly inside the store\n"],"sourceRoot":""}