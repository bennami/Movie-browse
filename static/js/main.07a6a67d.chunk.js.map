{"version":3,"sources":["utils.js","redux/actions/actionTypes.js","Api/apiUtils.js","redux/actions/apiStatus.js","redux/actions/homePageActions.js","Api/movieApi.js","Components/commons/searchbar/searchbar.js","Components/commons/nav/nav.js","Components/commons/card/Card.js","Components/commons/listOfMovies/List.js","Components/commons/spinner/Spinner.js","pages/search.js","pages/popular.js","Components/commons/slick-slider/slick-slider.js","pages/homePage/Homepage.js","pages/PageNotFound.js","pages/movieProfile/movieProfile.js","routes.js","App.js","serviceWorker.js","redux/reducers/initialState.js","redux/reducers/apiStatusReducer.js","redux/reducers/rootReducer.js","redux/reducers/homePageReducer.js","index.js","redux/configureStore.js"],"names":["API_KEY","BASE_URL","VIDEO_LINK","LOAD_TRENDING_MOVIES_SUCCESS","LOAD_POPULAR_MOVIES_SUCCESS","BEGIN_API_CALL","API_CALL_ERROR","SET_CURRENT_MOVIE","SEARCH_INPUT","SEARCH_RESULTS_SUCCESS","SET_CURRENT_PAGE","SEARCH_GENRE_SUCCESS","handleResponse","response","a","ok","console","log","json","status","text","error","Error","handleError","beginApiCall","type","types","apiCallError","setMovie","currentMovie","dispatch","setCurrentMovie","setSearch","searchInput","payload","setInputUser","loadSearchResults","currentPage","fetch","then","catch","HomePageApi","searchResults","searchMoviesResultsSuccess","setCurrentPage","setCurrentPageSuccess","SearchBar","props","useState","search","setSearchUser","history","useHistory","searchItem","e","preventDefault","alert","push","className","action","to","onSubmit","onChange","target","value","placeholder","onClick","prototypes","PropTypes","func","isRequired","number","string","array","actions","object","mapDispatchToProps","homePageAction","connect","state","homePageReducer","Nav","emptyMovie","src","alt","Card","viewMovieInfo","movieId","style","backgroundImage","img","title","List","movieList","map","movie","i","key","poster_path","original_title","description","overview","id","Spinner","Search","totalPages","name","useParams","useEffect","undefined","length","filteredMovie","filter","newCurrentMovie","pageCount","pageRangeDisplayed","marginPagesDisplayed","onPageChange","current","selected","containerClassName","breakClassName","Popular","popularMovies","setPopular","proxy","popular","results","fetchData","SlickSlider","settings","dots","fade","speed","slidesToShow","autoplay","arrows","backdrop_path","href","size","HomePage","loadPopularMovies","loadTrendingMovies","loadGenres","genres","trendingMovies","apiStatusReducer","loading","bool","loadPopularMoviesSuccess","loadTrendingMoviesSuccess","searchGenresSuccess","apiCallsInProgress","PageNotFound","MovieProfile","closeMovieInfo","vote_average","searchTrailer","release_date","genre_ids","mov","setMov","trailer","setTrailer","url","axios","get","data","channel","isOpen","videoId","onClose","color","cursor","substr","searchTrailerSuccess","Routes","exact","path","component","Homepage","App","Boolean","window","location","hostname","match","currentMovieProfile","actionTypeEndsInSuccess","substring","rootReducer","combineReducers","initialState","total_pages","store","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","reduxImmutableStateInvariant","configureStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.07a6a67d.chunk.js","sourcesContent":["export const API_KEY = '?api_key=67b347978ffe14fc5d6f8a664a1829f2';\nexport const BASE_URL = 'https://api.themoviedb.org/3';\nexport const VIDEO_LINK = 'https://api.themoviedb.org/3/movie/';\nexport const PROXY = 'https://cors-anywhere.herokuapp.com/';\nexport const URL_DETAIL = 'https://api.themoviedb.org/3/movie/';\nexport const IMG_SIZE_45 = 'https://image.tmdb.org/t/p/w45/';\nexport const IMG_BASE_200 = 'https://image.tmdb.org/t/p/w200/';\nexport const IMG_BASE_1280 = 'https://image.tmdb.org/t/p/w1280/';\nexport const LOGO_NAV = 'https://www.themoviedb.org/assets/1/v4/logos/primary-green-d70eebe18a5eb5b166d5c1ef0796715b8d1a2cbc698f96d311d62f894ae87085.svg';\n\n\n\n\n","export const LOAD_TRENDING_MOVIES_SUCCESS = 'LOAD_TRENDY_MOVIES_SUCCESS ';\nexport const LOAD_POPULAR_MOVIES_SUCCESS = 'LOAD_POPULAR_MOVIES_SUCCESS ';\nexport const BEGIN_API_CALL ='BEGIN_API_CALL';\nexport const API_CALL_ERROR = 'API_CALL_ERROR';\nexport const SET_CURRENT_MOVIE = 'SET_CURRENT_MOVIE';\nexport const SEARCH_INPUT = 'SEARCH_INPUT';\nexport const SEARCH_RESULTS_SUCCESS  ='SEARCH_RESULTS_SUCCESS';\nexport const SEARCH_TRAILER_SUCCESS  = 'SEARCH_TRAILER_SUCCESS';\nexport const SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nexport const SEARCH_GENRE_SUCCESS = 'SEARCH_GENRE_SUCCESS';\n\n","export async function handleResponse(response) {\n    if (response.ok){\n        console.log('fetch success')\n        return response.json();}\n    if (response.status === 400) {\n        const error = await response.text();\n        console.log(error);\n        throw new Error('404 error');\n    }\n    throw new Error(\"response failed\");\n}\n\nexport function handleError(error) {\n\n    console.error(\"API call failed. \" + error);\n    throw error;\n}\n","import * as types from './actionTypes'\n\nexport function beginApiCall() {\n    return{type: types.BEGIN_API_CALL}\n}\nexport function apiCallError() {\n    return{type: types.API_CALL_ERROR}\n}\n","import * as types from \"./actionTypes\";\nimport * as HomePageApi from \"../../Api/movieApi\";\nimport {apiCallError, beginApiCall} from \"./apiStatus\";\n\n//action creators\nexport function loadTrendingMoviesSuccess(trendingMovies) {\n    return {type: types.LOAD_TRENDING_MOVIES_SUCCESS, trendingMovies};\n}\n\nexport function loadPopularMoviesSuccess(popularMovies) {\n    return {type: types.LOAD_POPULAR_MOVIES_SUCCESS, popularMovies};\n}\n\nexport function setCurrentMovie(currentMovie) {\n    return {type: types.SET_CURRENT_MOVIE, currentMovie};\n}\n\nexport function setInputUser(searchInput) {\n    return {type: types.SEARCH_INPUT, payload:searchInput};\n}\n\nexport function searchMoviesResultsSuccess(searchResults) {\n    return {type: types.SEARCH_RESULTS_SUCCESS,searchResults:searchResults};\n}\n\nexport function searchTrailerSuccess(trailer) {\n    return {type: types.SEARCH_TRAILER_SUCCESS,trailer}\n}\n\nexport function setCurrentPageSuccess(currentPage) {\n    return{type: types.SET_CURRENT_PAGE,currentPage}\n\n}\n\nexport function searchGenresSuccess(genres) {\n    return {type: types.SEARCH_GENRE_SUCCESS,genres}\n}\n//thunks\nexport function loadTrendingMovies() {\n    return function (dispatch) {\n        dispatch(beginApiCall());\n        return HomePageApi.loadTrendingMovies()\n            .then(trendingMovies => {\n            dispatch(loadTrendingMoviesSuccess(trendingMovies));\n        })\n            .catch(error => {\n            dispatch(apiCallError(error));\n            throw error ;\n        });\n    };\n}\n\nexport function loadPopularMovies(currentPage) {\n    return function (dispatch) {\n        dispatch(beginApiCall());\n        return HomePageApi\n            .loadPopularMovies(currentPage)\n            .then(popularMovies => {\n            dispatch(loadPopularMoviesSuccess(popularMovies));\n        }).catch(error => {\n            dispatch(apiCallError(error));\n            throw error;\n        });\n    };\n}\n\nexport function loadGenres() {\n    return function (dispatch) {\n        dispatch(beginApiCall());\n        return HomePageApi\n            .loadGenresMovies()\n            .then(genres => {\n                dispatch(searchGenresSuccess(genres));\n            }).catch(error => {\n                dispatch(apiCallError(error));\n                throw error;\n            });\n    };\n}\n\nexport function setMovie (currentMovie){\n    return function (dispatch) {\n        dispatch(setCurrentMovie(currentMovie));\n    }\n}\n\nexport function setSearch (searchInput){\n    return function (dispatch) {\n        dispatch(setInputUser(searchInput));\n    }\n}\n\nexport function loadSearchResults(searchInput,currentPage) {\n    return function (dispatch) {\n        dispatch(beginApiCall());\n       return HomePageApi.searchResults(searchInput,currentPage)\n            .then(searchResults => {\n                dispatch(searchMoviesResultsSuccess(searchResults));\n            })\n            .catch(error => {\n                dispatch(apiCallError(error));\n                throw error;\n            });\n    };\n}\n\nexport function searchTrailer(id) {\n    return function (dispatch) {\n        dispatch(beginApiCall());\n        return HomePageApi.loadTrailer(id)\n            .then(trailer =>{\n                dispatch(searchTrailerSuccess(trailer));\n            })\n            .catch(\n                error => {\n                    dispatch(apiCallError(error));\n                    throw error;\n                });\n    };\n}\n\nexport function setCurrentPage (currentPage){\n    return function (dispatch) {\n        dispatch(setCurrentPageSuccess(currentPage));\n    }\n}\n\n\n\n","import { handleResponse, handleError } from \"./apiUtils\";\nimport {API_KEY, BASE_URL, VIDEO_LINK} from \"../utils\";\n\nexport function searchResults(searchInput,currentPage) {\n    return fetch(`${BASE_URL}/search/movie${API_KEY}&query=${searchInput}&page=${currentPage}`)\n        .then(handleResponse)\n        .catch(handleError);\n}\n\nexport function loadTrendingMovies() {\n    return fetch(`${BASE_URL}/trending/all/day${API_KEY}`)\n        .then(handleResponse)\n        .catch(handleError);\n\n}\n\nexport function loadPopularMovies(currentPage) {\n        return  fetch (`${BASE_URL}/movie/popular${API_KEY}&language=en-US&page=${currentPage}`)\n            .then(handleResponse)\n            .catch(handleError);\n}\n\n//id  is currentMovie.id\nexport function loadTrailer(id) {\n    return fetch(`${VIDEO_LINK}${id}/videos/${API_KEY}`)\n        .then(handleResponse)\n        .catch(handleError);\n\n}\n\n\nexport function loadGenresMovies() {\n    return fetch(`${BASE_URL}/genre/movie/list${API_KEY}&language=en-US`)\n        .then(handleResponse)\n        .catch(handleError);\n}\n\n\n","import React, {useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport {Link, useHistory} from 'react-router-dom';\nimport PropTypes from 'prop-types'\nimport * as homePageAction from \"../../../redux/actions/homePageActions\";\nimport './searchBar.scss';\nimport {FaSearch} from \"react-icons/all\";\n\nfunction SearchBar({\n    setSearch,\n    loadSearchResults,\n    searchInput,\n    searchResults,\n    currentPage,\n    setMovie,\n    ...props\n    }) {\n\n    const [search, setSearchUser] = useState('');\n    const history = useHistory();\n\n    //search and  redirect to search results\n    const searchItem = async (e) => {\n        e.preventDefault();\n\n        if (search === \"\") {\n            alert(\"please enter a movie title\")\n        } else {\n            setSearch(search);\n            setMovie([]);\n            loadSearchResults(search).catch(error => {\n                alert(\"loading popular\" + error)\n            })\n            history.push(`/search/${search}`);\n        }\n    }\n\n    const handleChange = (e) => {\n        setSearchUser(e.target.value);\n    };\n\n    return (\n        <div className={'search'}>\n            <form action={<Link to={'/search'}>search</Link>} onSubmit={searchItem}>\n                <input onChange={handleChange} type=\"text\" value={search} placeholder={'search for a movie'}/>\n                <button type={'submit'} onClick={searchItem}><Link to={'/search'}><FaSearch /></Link></button>\n            </form>\n            <p>{props.searchInput}</p>\n        </div>\n    )\n\n}\n\nSearchBar.prototypes = {\n    setSearch: PropTypes.func.isRequired,\n    setMovie: PropTypes.func.isRequired,\n    currentPage: PropTypes.number.isRequired,\n    loadSearchResults: PropTypes.func.isRequired,\n    searchInput: PropTypes.string.isRequired,\n    searchResults: PropTypes.array.isRequired,\n    actions: PropTypes.object.isRequired\n}\n\nfunction mapStateToProps(state) {\n    return {\n        currentPage: state.homePageReducer.currentPage,\n        searchInput: state.homePageReducer.searchInput,\n        searchResults: state.homePageReducer.searchResults\n    };\n}\n\n\nconst mapDispatchToProps = {\n    setSearch: homePageAction.setSearch,\n    setMovie: homePageAction.setMovie,\n    loadSearchResults: homePageAction.loadSearchResults\n\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBar);\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport \"./navbar.scss\"\nimport {LOGO_NAV} from \"../../../utils\";\nimport {connect} from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport SearchBar from \"./../../commons/searchbar/searchbar\";\nimport * as homePageAction from \"../../../redux/actions/homePageActions\";\n\nfunction Nav ({setMovie}) {\n    function emptyMovie(){setMovie([]);}\n    return(\n    <div>\n     <nav className={'nav'}>\n         <div className={\"nav-links\"}>\n             <img src={LOGO_NAV} alt=\"\"/>\n             <ul>\n             <li onClick={emptyMovie}><Link to={'/home'}>home</Link></li>\n             <li onClick={emptyMovie}><Link to={'/login'}>login</Link></li>\n             <li onClick={emptyMovie} className={\"hide\"}><i >search</i></li>\n             </ul>\n         </div>\n         <div className={'nav-search'}>\n            <SearchBar/>\n         </div>\n     </nav>\n    </div>\n    )\n}\nNav.prototypes  ={\n    setMovie: PropTypes.func.isRequired,\n\n}\n\nconst mapDispatchToProps = {\n    setMovie:  homePageAction.setMovie\n}\nexport default  connect(null,mapDispatchToProps)(Nav);\n","import React from \"react\";\nimport  \"./card.scss\";\n\nconst Card  = (props) =>{\n    return(\n\n            <div onClick={()=> props.viewMovieInfo(props.movieId)}>\n                <div className={'cardMovie'} style={{backgroundImage: `url(${props.img})`}} />\n                <p className={\"titleMovie\"}>{props.title}</p>\n           </div>\n\n    )\n};\n\nexport default Card\n","import React from \"react\";\nimport Card from \"../card/Card.js\"\nimport {IMG_BASE_200} from \"../../../utils\";\n\nconst List =({movieList,viewMovieInfo}) =>(\n    <div  className={'list'}>\n       {\n         movieList.map((movie, i) =>{\n             return <Card\n                        key={i}\n                        img={`${IMG_BASE_200}${movie.poster_path}`}\n                        title={movie.original_title}\n                        description={movie.overview}\n                        viewMovieInfo={viewMovieInfo}\n                        movieId={movie.id}\n                    />\n             })\n       }\n    </div>\n)\nexport default List;\n","\nimport React from 'react';\nimport \"./spinner.css\"\n\nconst Spinner =() =>{\n    return<div className={\"loader\"}>Loading...</div>\n};\nexport default Spinner;\n","import React, {useEffect, useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport List from \"../Components/commons/listOfMovies/List\";\nimport {useHistory, useParams} from \"react-router-dom\";\nimport Spinner from \"../Components/commons/spinner/Spinner\";\nimport PropTypes from \"prop-types\";\nimport * as homePageAction from \"../redux/actions/homePageActions\";\nimport ReactPaginate from \"react-paginate\";\n\nfunction Search({\n                    setMovie,\n                    searchInput,\n                    searchResults,\n                    loadSearchResults,\n                    setCurrentPage,\n                    currentMovie,\n                    currentPage,\n                    setSearch,\n                    totalPages\n                }) {\n    const [movieGenres] = useState([]);\n    const history = useHistory();\n    const {name} = useParams();\n\n      useEffect(()=>{\n          setSearch(name)\n         if(searchInput !=='' || currentPage !==1 ) {\n             loadSearchResults(searchInput,currentPage).catch(error => {\n                 alert(\"loading search results failed\" + error)\n             })\n             history.push(`/search/${searchInput}`);\n         }\n      },[searchInput,currentPage,name,loadSearchResults,history,setSearch]);\n\n    const viewMovieInfo = (id) => {\n        const filteredMovie = searchResults.filter(movie => movie.id === id);\n        const newCurrentMovie = filteredMovie.length > 0 ? filteredMovie[0] : null;\n        setMovie(newCurrentMovie);\n\n        history.push(`/home/${newCurrentMovie.title}`);\n    };\n\n    function clickedNumber(current){\n        current = current.selected+1\n        if(current !== currentPage){\n            setCurrentPage(current);\n            loadSearchResults(currentPage);\n        }\n    }\n\n    return (\n        <div>\n            { <>\n\n                    {\n                        searchResults === undefined\n                            ?\n                            <>\n                                <Spinner/>\n                            </>\n                            :\n                            searchResults.length === 0\n                                ?\n                                <p>no movies found</p>\n                                :\n                                <>\n                                    <h3>Results for: {searchInput}</h3>\n                                    <List movieList={searchResults} viewMovieInfo={viewMovieInfo}/>\n                                    <ReactPaginate\n                                        pageCount = {totalPages}\n                                        pageRangeDisplayed = {4}\n                                        marginPagesDisplayed = {0}\n                                        onPageChange={clickedNumber}\n                                        containerClassName = {'container'}\n                                        breakClassName={\"break\"}\n                                    />\n                                </>\n                    }\n\n                </>\n\n            }\n\n        </div>\n    )\n}\n\nSearch.prototypes = {\n    loadSearchResults: PropTypes.func.isRequired,\n    setCurrentPage: PropTypes.func.isRequired,\n    setSearch:PropTypes.func.isRequired,\n    searchInput: PropTypes.string.isRequired,\n    searchResults: PropTypes.array.isRequired,\n    currentMovie: PropTypes.array.isRequired,\n    actions: PropTypes.object.isRequired,\n    setMovie: PropTypes.func.isRequired,\n}\n\nfunction mapStateToProps(state) {\n    return {\n        searchInput: state.homePageReducer.searchInput,\n        searchResults: state.homePageReducer.searchResults,\n        currentMovie: state.homePageReducer.currentMovie,\n        currentPage: state.homePageReducer.currentPage,\n        totalPages: state.homePageReducer.totalPages\n    };\n}\nconst mapDispatchToProps = {\n    loadSearchResults: homePageAction.loadSearchResults,\n    setSearch: homePageAction.setSearch,\n    setMovie: homePageAction.setMovie,\n    setCurrentPage: homePageAction.setCurrentPage\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\n","import React, {useEffect, useState} from \"react\";\nimport List from \"../Components/commons/listOfMovies/List\";\n\nfunction Popular() {\n\n    const [popularMovies, setPopular] = useState([]);\n    const proxy = \"https://cors-anywhere.herokuapp.com/\";\n\n    //on load, load List with popular movies\n    useEffect(() => {\n        async function fetchData() {\n            const response = await fetch (`${proxy}https://api.themoviedb.org/3/movie/popular?api_key=67b347978ffe14fc5d6f8a664a1829f2&language=en-US&page=1\n `);\n\n            const popular = await response.json();\n            setPopular(popular.results);\n        }\n        fetchData();\n    }, []);\n\n\n    return(\n        <div className={'popular-container'}>\n        <h1>Popular movies</h1>\n        <List movieList={popularMovies}/>\n        </div>\n    )\n\n}\n\nexport default Popular;\n","import React from 'react';\nimport 'slick-carousel/slick/slick.css'\nimport 'slick-carousel/slick/slick-theme.css'\nimport Slider from \"react-slick\";\nimport './slick-slider.css';\n\n\nfunction SlickSlider({popularMovies}) {\n\n\n    const settings = {\n        dots: false,\n        fade: true,\n\n        speed: 200,\n\n        slidesToShow: 1,\n        autoplay: true,\n        arrows: false,\n        className: 'slides',\n\n    };\n\n    return (\n        <div className=\"App\">\n            <Slider {...settings}>\n                {\n                    popularMovies.map((movie, i) => {\n                        return <div key={i}>\n                            <div className=\"carousel-item\" key={i} style={{backgroundImage: `url(https://image.tmdb.org/t/p/w1280/${movie.backdrop_path})`}}>\n                                <div className={'slider-text'}>\n                                    <h1>Movie DB</h1>\n                                    <h3>browse through the biggest movie library</h3>\n                                    <a href=\"#popularSection\"><ion-icon size={\"large\"} name=\"arrow-down\"/>\n                                    </a>\n                                </div>\n                            </div>\n                        </div>\n                    })\n                }\n            </Slider>\n        </div>\n    );\n}\n\nexport default SlickSlider;\n","import React, {useEffect} from \"react\";\nimport {connect} from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport * as homePageAction from \"../../redux/actions/homePageActions\";\nimport List from \"../../Components/commons/listOfMovies/List\";\nimport SlickSlider from \"../../Components/commons/slick-slider/slick-slider\";\nimport \"./homepage.scss\"\nimport Spinner from \"../../Components/commons/spinner/Spinner\";\nimport ReactPaginate from 'react-paginate';\nimport { useHistory } from \"react-router-dom\";\n\nfunction HomePage({\n    loadPopularMovies,\n    loadTrendingMovies,\n    loadGenres,\n    genres,\n    setMovie,\n    popularMovies,\n    trendingMovies,\n    currentPage,\n    setCurrentPage,\n    totalPages\n    }) {\n\n    useEffect(()=>{\n        if(genres === undefined || genres.length === 0){\n            loadGenres()\n                .catch(error => {\n                    alert(\"loading trending movies\" + error)\n                })\n        }\n    },[loadGenres,genres,currentPage])\n    useEffect(() => {\n\n        if (popularMovies === undefined ||popularMovies.length === 0) {\n            loadPopularMovies(currentPage)\n\n                .catch(error => {\n                    alert(\"loading popular\" + error)\n                })\n        }\n        if (trendingMovies === undefined || trendingMovies.length ===0) {\n            loadTrendingMovies()\n                .catch(error => {\n                    alert(\"loading trending movies\" + error)\n                })\n        }\n\n\n\n    }, [trendingMovies, popularMovies, loadTrendingMovies, loadPopularMovies,currentPage]);\n    const history = useHistory();\n    const viewMovieInfo = (id) => {\n            const filteredMovie = popularMovies.filter(movie => movie.id === id);\n            const newCurrentMovie = filteredMovie.length > 0 ? filteredMovie[0] : null;\n            // set selected movie to current movie and push data\n            setMovie(newCurrentMovie);\n            history.push(`/home/${newCurrentMovie.title}`);\n    };\n\n    function clickedNumber(current){\n        console.log(currentPage)\n        console.log( current.selected+1)\n        current = current.selected+1\n        if(current !== currentPage){\n            setCurrentPage(current);\n\n            loadPopularMovies(currentPage);\n        }\n    }\n\n    return (\n        <>\n            {\n\n                    popularMovies === undefined  || trendingMovies === undefined\n                        ?\n                        <Spinner/>\n                        :\n                        <>\n                            <SlickSlider\n                            popularMovies={popularMovies}/>\n                            <h1 id=\"popularSection\">Popular movies</h1>\n                            <List\n                                movieList={popularMovies}\n                                viewMovieInfo={viewMovieInfo}\n                            />\n                            <ReactPaginate\n                                pageCount={totalPages}\n                                pageRangeDisplayed={4}\n                                marginPagesDisplayed={0}\n                                onPageChange={clickedNumber}\n                                containerClassName={'container'}\n                                breakClassName={\"break\"}\n                            />\n                        </>\n            }\n        </>\n    )\n}\n\nHomePage.prototypes = {\n    loadPopularMovies: PropTypes.func.isRequired,\n    loadTrendingMovies: PropTypes.func.isRequired,\n    loadGenres: PropTypes.func.isRequired,\n    setMovie:  PropTypes.func.isRequired,\n    popularMovies: PropTypes.array.isRequired,\n    trendingMovies: PropTypes.object.isRequired,\n    apiStatusReducer: PropTypes.number.isRequired,\n    loading: PropTypes.bool.isRequired,\n    currentMovie:  PropTypes.array.isRequired,\n    currentPage: PropTypes.number.isRequired,\n    totalPages: PropTypes.number.isRequired,\n}\n\nfunction mapStateToProps(state) {\n    return {\n        trendingMovies: state.homePageReducer.trendingMovies,\n        popularMovies: state.homePageReducer.popularMovies,\n        currentMovie: state.homePageReducer.currentMovie,\n        currentPage: state.homePageReducer.currentPage,\n        totalPages: state.homePageReducer.totalPages,\n        loading: state.apiCallsInProgress > 0\n\n    };\n}\n\nconst mapDispatchToProps = {\n    loadPopularMovies: homePageAction.loadPopularMovies,\n    loadTrendingMovies: homePageAction.loadTrendingMovies,\n    loadGenres: homePageAction.loadGenres,\n    setMovie:  homePageAction.setMovie,\n    setCurrentPage: homePageAction.setCurrentPage\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\n\n\n\n\n","import React from 'react'\n\nconst PageNotFound = () => <h1>Oops! page not found.</h1>;\n\nexport default PageNotFound\n","import React, {useState} from 'react';\nimport \"../../utils\";\nimport {connect} from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport {FaPlay} from \"react-icons/all\";\nimport * as homePageAction from \"../../redux/actions/homePageActions\";\nimport './movieProfile.scss'\nimport axios from \"axios\";\nimport{VIDEO_LINK,API_KEY} from \"../../utils\";\nimport ModalVideo from \"react-modal-video\";\nimport 'react-modal-video/scss/modal-video.scss';\n\nfunction MovieProfile({closeMovieInfo,currentMovie,genres,searchTrailer}) {\n\n    const {vote_average, id, release_date, backdrop_path, overview, poster_path, genre_ids, title} = currentMovie;\n\nconst [mov,setMov] = useState('');\nconst [trailer,setTrailer]=useState(false);\n\n   async function checkTrailer(){\n        if(mov === ''){\n            const url = `${VIDEO_LINK}${id}/videos${API_KEY}`;\n            axios.get(url).then(response => {\n                setMov( response.data.results[0].key );\n\n            });\n\n        }\n        setTrailer(true);\n\n\n        /* if(trailer=== undefined){\n             searchTrailer(id).catch(error => {\n                 alert(\"loading popular\" + error)\n             });\n         }*/\n\n     }\n    console.log(mov)\n    return (\n        <>\n           <div className={\"container-profile\"} style={{backgroundImage: `url(https://image.tmdb.org/t/p/w1280/${backdrop_path})`}}>\n                {\n                    trailer\n                    ?\n                    <ModalVideo\n                        channel=\"youtube\"\n                        isOpen={trailer}\n                        videoId={mov}\n                        onClose={() => setTrailer(false)}\n                    />\n                    :\n                    <div className={'content'}>\n                        <div className={'cross'}>\n                            <ion-icon\n                                size=\"large\" name=\"close-outline\" onClick={closeMovieInfo}\n                                style={{color: \"whitesmoke\", cursor: \"pointer\"}}\n                            />\n                        </div>\n                        <div className={\"info\"}>\n                            <div className={\"profile-img\"}>\n                                <div className={\"img-container\"}>\n                                    <img src={`https://image.tmdb.org/t/p/w500/${poster_path}`} alt={title}/>\n                                </div>\n                            </div>\n                            <div className=\"profile-text\">\n                                <h2>{title}</h2>\n                                <ul className={'sub-title'}>\n                                    <li><small>{vote_average === 0 ? \"No ratings yet\" : `Rating: ${vote_average}`} </small></li>\n                                    <li> <small>Year: {release_date.substr(0, 4)} </small></li>\n                                </ul>\n                                <br/>\n\n                                    {/*{ */}\n                                    {/*    genre_ids.map(id => {*/}\n                                    {/*       const allGenres = genres.genres*/}\n\n                                    {/*        Object.keys(allGenres).forEach(*/}\n                                    {/*            function(key) {*/}\n                                    {/*            console.log(key,allGenres[key].name)*/}\n                                    {/*            return allGenres[0].name*/}\n                                    {/*        })*/}\n                                    {/*    })*/}\n                                    {/*}*/}\n                               <ul className={\"genres\"}>\n                                   <li>{genres.genres[0].name}</li>\n                                   <li>{genres.genres[1].name}</li>\n                                   <li>{genres.genres[2].name}</li>\n                               </ul>\n                                <p className={\"description\"}>{overview}</p>\n                                <ul>\n                                    <li className={'trailer-btn'} onClick={checkTrailer}>\n                                        trailer\n                                        <FaPlay/>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n\n                }\n           </div>\n        </>\n    )\n}\nMovieProfile.prototypes = {\n    trailer: PropTypes.array.isRequired,\n    searchTrailer: PropTypes.func.isRequired,\n    currentMovie :PropTypes.array.isRequired\n}\n\nfunction mapStateToProps(state) {\n    return {\n        trailer: state.homePageReducer.trailer,\n        currentMovie: state.homePageReducer.currentMovie,\n        genres: state.homePageReducer.genres\n    };\n}\n\nconst mapDispatchToProps = {\n    searchTrailer:  homePageAction.searchTrailer()\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(MovieProfile);\n","import React from \"react\";\nimport {Switch, Route} from 'react-router-dom';\nimport Search from \"../src/pages/search\"\nimport Popular from \"../src/pages/popular\"\nimport Homepage from \"./pages/homePage/Homepage\"\nimport PageNotFound from \"./pages/PageNotFound\"\nimport MovieProfile from \"./pages/movieProfile/movieProfile\";\n\nconst Routes = () =>{\n    return(\n        <Switch>\n            <Route exact path=\"/\" component={Homepage}/>\n            <Route exact path=\"/home\" component={Homepage}/>\n            <Route  path=\"/home/:currentMovie\"  component={MovieProfile}/>\n            <Route exact path=\"/Movie-browse\" component={Homepage}/>\n            <Route exact path=\"/popular\" component={Popular}/>\n            <Route exact path=\"/top5\"/>\n            <Route path=\"/search/:name\" component={Search}/>\n            <Route path=\"/movieProfile/:currentMovie\" component={MovieProfile}/>\n            <Route component={PageNotFound}/>\n        </Switch>\n    )\n};\n\nexport default Routes;\n","import React from 'react';\nimport Nav from \"./Components/commons/nav/nav\";\nimport Routes from \"./routes\";\nimport './App.css';\n\n  export function App() {\n          return (\n              <div className=\"App\">\n                  <Nav/>\n                  <Routes/>\n              </div>\n          )\n    }\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export default {\n    searchInput:'',\n    currentPage: 1,\n    currentMovieProfile:  null,\n    apiCallsInProgress: 0,\n    currentMovie:[],\n    loading: false,\n\n};\n","import * as types from '../actions/actionTypes'\nimport initialState from \"./initialState\";\n\nfunction actionTypeEndsInSuccess(type) {\n  return type.substring(type.length -8 ) === '_SUCCESS';\n}\n\nexport default function apiCallStatusReducer(\n    state = initialState.apiCallsInProgress,\n    action) {\n  if(action.type === types.BEGIN_API_CALL){\n    return state +  1;\n  }\n  if(actionTypeEndsInSuccess(action.type)){\n    return state - 1\n  }\n  else if (action.type === types.API_CALL_ERROR ){\n    return state - 1\n  }\n    return state\n}\n","import {combineReducers} from \"redux\";\nimport homePageReducer from \"./homePageReducer\";\nimport apiStatusReducer from \"./apiStatusReducer\";\n\nconst rootReducer = combineReducers({\n    homePageReducer,\n    apiStatusReducer,\n\n});\nexport default rootReducer;\n","import * as types from \"../actions/actionTypes\";\nimport initialState from \"./initialState\";\n\nexport default function homePageReducer(state = initialState, action) {\n    switch (action.type) {\n        case types.LOAD_TRENDING_MOVIES_SUCCESS:\n            return {\n                ...state,\n                trendingMovies: action.trendingMovies.results,\n                totalPages: action.trendingMovies.total_pages,\n\n            };\n        case types.SET_CURRENT_MOVIE:\n            return {...state, currentMovie: action.currentMovie};\n        case types.LOAD_POPULAR_MOVIES_SUCCESS:\n            return {\n                ...state,\n                popularMovies: action.popularMovies.results,\n                totalPages: action.popularMovies.total_pages,\n\n            };\n        case types.SEARCH_INPUT:\n            return {...state, searchInput: action.payload};\n        case types.SEARCH_RESULTS_SUCCESS:\n            return {\n                ...state,\n                searchResults: action.searchResults.results,\n                totalPages: action.searchResults.total_pages,\n            };\n        case types.SET_CURRENT_PAGE:\n            return {...state,currentPage: action.currentPage};\n        case types.SEARCH_GENRE_SUCCESS:\n            return {...state, genres: action.genres};\n        default:\n            return state;\n    }\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {HashRouter} from \"react-router-dom\";\nimport configureStore from \"./redux/configureStore\";\n\n//provider is a higher order component that provides  your redux data to child components\nimport {Provider as ReduxProvider} from 'react-redux'\n\nlet  store = configureStore();\n\nReactDOM.render(\n\n      <HashRouter>\n          <ReduxProvider store={store}>\n            <App />\n          </ReduxProvider>\n      </HashRouter>\n\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {createStore, applyMiddleware, compose} from \"redux\";\nimport rootReducer from \"./reducers/rootReducer\";\nimport reduxImmutableStateInvariant from 'redux-immutable-state-invariant'\nimport thunk from \"redux-thunk\";\nimport logger from 'redux-logger'\nexport default function configureStore(initialState) {\n\n    //this adds support for redux dev tools, this const gives us a funtion that we can call\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n    return createStore(\n        rootReducer,\n        initialState,\n        composeEnhancers(applyMiddleware(thunk,reduxImmutableStateInvariant()))\n    );\n}\n//configureStore takes in initial state as parameter so we have some data\n//middleware  is  a way to enhance redux with extra functionality, 3rd parameter for create store  accepts the middlewarefunction\n//reduxImmutableStateInvariant() will warn you if you accidentally mutate  any state directly inside the store\n"],"sourceRoot":""}