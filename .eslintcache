[{"/Users/imane/Desktop/GITHUB/Movie-browse/src/index.js":"1","/Users/imane/Desktop/GITHUB/Movie-browse/src/App.js":"2","/Users/imane/Desktop/GITHUB/Movie-browse/src/serviceWorker.js":"3","/Users/imane/Desktop/GITHUB/Movie-browse/src/redux/configureStore.js":"4","/Users/imane/Desktop/GITHUB/Movie-browse/src/routes.js":"5","/Users/imane/Desktop/GITHUB/Movie-browse/src/Components/commons/nav/nav.js":"6","/Users/imane/Desktop/GITHUB/Movie-browse/src/redux/reducers/rootReducer.js":"7","/Users/imane/Desktop/GITHUB/Movie-browse/src/pages/search.js":"8","/Users/imane/Desktop/GITHUB/Movie-browse/src/pages/homePage/Homepage.js":"9","/Users/imane/Desktop/GITHUB/Movie-browse/src/pages/PageNotFound.js":"10","/Users/imane/Desktop/GITHUB/Movie-browse/src/pages/popular.js":"11","/Users/imane/Desktop/GITHUB/Movie-browse/src/pages/movieProfile/movieProfile.js":"12","/Users/imane/Desktop/GITHUB/Movie-browse/src/utils.js":"13","/Users/imane/Desktop/GITHUB/Movie-browse/src/redux/reducers/homePageReducer.js":"14","/Users/imane/Desktop/GITHUB/Movie-browse/src/redux/reducers/apiStatusReducer.js":"15","/Users/imane/Desktop/GITHUB/Movie-browse/src/redux/actions/homePageActions.js":"16","/Users/imane/Desktop/GITHUB/Movie-browse/src/Components/commons/searchbar/searchbar.js":"17","/Users/imane/Desktop/GITHUB/Movie-browse/src/Components/commons/listOfMovies/List.js":"18","/Users/imane/Desktop/GITHUB/Movie-browse/src/Components/commons/spinner/Spinner.js":"19","/Users/imane/Desktop/GITHUB/Movie-browse/src/Components/commons/slick-slider/slick-slider.js":"20","/Users/imane/Desktop/GITHUB/Movie-browse/src/redux/reducers/initialState.js":"21","/Users/imane/Desktop/GITHUB/Movie-browse/src/redux/actions/actionTypes.js":"22","/Users/imane/Desktop/GITHUB/Movie-browse/src/redux/actions/apiStatus.js":"23","/Users/imane/Desktop/GITHUB/Movie-browse/src/Api/movieApi.js":"24","/Users/imane/Desktop/GITHUB/Movie-browse/src/Components/commons/card/Card.js":"25","/Users/imane/Desktop/GITHUB/Movie-browse/src/Api/apiUtils.js":"26"},{"size":865,"mtime":1611575530485,"results":"27","hashOfConfig":"28"},{"size":302,"mtime":1599995522047,"results":"29","hashOfConfig":"28"},{"size":5086,"mtime":1599995522056,"results":"30","hashOfConfig":"28"},{"size":958,"mtime":1602078672650,"results":"31","hashOfConfig":"28"},{"size":974,"mtime":1611575601698,"results":"32","hashOfConfig":"28"},{"size":1121,"mtime":1599995522049,"results":"33","hashOfConfig":"28"},{"size":254,"mtime":1599995522055,"results":"34","hashOfConfig":"28"},{"size":4063,"mtime":1611575530481,"results":"35","hashOfConfig":"28"},{"size":4624,"mtime":1611436759098,"results":"36","hashOfConfig":"28"},{"size":115,"mtime":1599995522051,"results":"37","hashOfConfig":"28"},{"size":831,"mtime":1602101846059,"results":"38","hashOfConfig":"28"},{"size":3677,"mtime":1611576048576,"results":"39","hashOfConfig":"28"},{"size":538,"mtime":1611576048579,"results":"40","hashOfConfig":"28"},{"size":1336,"mtime":1602080320424,"results":"41","hashOfConfig":"28"},{"size":533,"mtime":1599995522054,"results":"42","hashOfConfig":"28"},{"size":3542,"mtime":1599995522054,"results":"43","hashOfConfig":"28"},{"size":2316,"mtime":1599995522050,"results":"44","hashOfConfig":"28"},{"size":640,"mtime":1599995522048,"results":"45","hashOfConfig":"28"},{"size":154,"mtime":1599995522051,"results":"46","hashOfConfig":"28"},{"size":1342,"mtime":1599995522050,"results":"47","hashOfConfig":"28"},{"size":161,"mtime":1599995522055,"results":"48","hashOfConfig":"28"},{"size":585,"mtime":1599995522054,"results":"49","hashOfConfig":"28"},{"size":188,"mtime":1599995522054,"results":"50","hashOfConfig":"28"},{"size":1061,"mtime":1599995522047,"results":"51","hashOfConfig":"28"},{"size":364,"mtime":1599995522047,"results":"52","hashOfConfig":"28"},{"size":441,"mtime":1599995522047,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"vy40c",{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"/Users/imane/Desktop/GITHUB/Movie-browse/src/index.js",[],"/Users/imane/Desktop/GITHUB/Movie-browse/src/App.js",[],["111","112"],"/Users/imane/Desktop/GITHUB/Movie-browse/src/serviceWorker.js",[],"/Users/imane/Desktop/GITHUB/Movie-browse/src/redux/configureStore.js",["113"],"import {createStore, applyMiddleware, compose} from \"redux\";\nimport rootReducer from \"./reducers/rootReducer\";\nimport reduxImmutableStateInvariant from 'redux-immutable-state-invariant'\nimport thunk from \"redux-thunk\";\nimport logger from 'redux-logger'\nexport default function configureStore(initialState) {\n\n    //this adds support for redux dev tools, this const gives us a funtion that we can call\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n    return createStore(\n        rootReducer,\n        initialState,\n        composeEnhancers(applyMiddleware(thunk,reduxImmutableStateInvariant()))\n    );\n}\n//configureStore takes in initial state as parameter so we have some data\n//middleware  is  a way to enhance redux with extra functionality, 3rd parameter for create store  accepts the middlewarefunction\n//reduxImmutableStateInvariant() will warn you if you accidentally mutate  any state directly inside the store\n","/Users/imane/Desktop/GITHUB/Movie-browse/src/routes.js",[],"/Users/imane/Desktop/GITHUB/Movie-browse/src/Components/commons/nav/nav.js",[],"/Users/imane/Desktop/GITHUB/Movie-browse/src/redux/reducers/rootReducer.js",[],"/Users/imane/Desktop/GITHUB/Movie-browse/src/pages/search.js",["114"],"import React, {useEffect, useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport List from \"../Components/commons/listOfMovies/List\";\nimport {useHistory, useParams} from \"react-router-dom\";\nimport Spinner from \"../Components/commons/spinner/Spinner\";\nimport PropTypes from \"prop-types\";\nimport * as homePageAction from \"../redux/actions/homePageActions\";\nimport ReactPaginate from \"react-paginate\";\n\nfunction Search({\n                    setMovie,\n                    searchInput,\n                    searchResults,\n                    loadSearchResults,\n                    setCurrentPage,\n                    currentMovie,\n                    currentPage,\n                    setSearch,\n                    totalPages\n                }) {\n    const [movieGenres] = useState([]);\n    const history = useHistory();\n    const {name} = useParams();\n\n      useEffect(()=>{\n          setSearch(name)\n         if(searchInput !=='' || currentPage !==1 ) {\n             loadSearchResults(searchInput,currentPage).catch(error => {\n                 alert(\"loading search results failed\" + error)\n             })\n             history.push(`/search/${searchInput}`);\n         }\n      },[searchInput,currentPage,name,loadSearchResults,history,setSearch]);\n\n    const viewMovieInfo = (id) => {\n        const filteredMovie = searchResults.filter(movie => movie.id === id);\n        const newCurrentMovie = filteredMovie.length > 0 ? filteredMovie[0] : null;\n        setMovie(newCurrentMovie);\n\n        history.push(`/home/${newCurrentMovie.title}`);\n    };\n\n    function clickedNumber(current){\n        current = current.selected+1\n        if(current !== currentPage){\n            setCurrentPage(current);\n            loadSearchResults(currentPage);\n        }\n    }\n\n    return (\n        <div>\n            { <>\n\n                    {\n                        searchResults === undefined\n                            ?\n                            <>\n                                <Spinner/>\n                            </>\n                            :\n                            searchResults.length === 0\n                                ?\n                                <p>no movies found</p>\n                                :\n                                <>\n                                    <h3>Results for: {searchInput}</h3>\n                                    <List movieList={searchResults} viewMovieInfo={viewMovieInfo}/>\n                                    <ReactPaginate\n                                        pageCount = {totalPages}\n                                        pageRangeDisplayed = {4}\n                                        marginPagesDisplayed = {0}\n                                        onPageChange={clickedNumber}\n                                        containerClassName = {'container'}\n                                        breakClassName={\"break\"}\n                                    />\n                                </>\n                    }\n\n                </>\n\n            }\n\n        </div>\n    )\n}\n\nSearch.prototypes = {\n    loadSearchResults: PropTypes.func.isRequired,\n    setCurrentPage: PropTypes.func.isRequired,\n    setSearch:PropTypes.func.isRequired,\n    searchInput: PropTypes.string.isRequired,\n    searchResults: PropTypes.array.isRequired,\n    currentMovie: PropTypes.array.isRequired,\n    actions: PropTypes.object.isRequired,\n    setMovie: PropTypes.func.isRequired,\n}\n\nfunction mapStateToProps(state) {\n    return {\n        searchInput: state.homePageReducer.searchInput,\n        searchResults: state.homePageReducer.searchResults,\n        currentMovie: state.homePageReducer.currentMovie,\n        currentPage: state.homePageReducer.currentPage,\n        totalPages: state.homePageReducer.totalPages\n    };\n}\nconst mapDispatchToProps = {\n    loadSearchResults: homePageAction.loadSearchResults,\n    setSearch: homePageAction.setSearch,\n    setMovie: homePageAction.setMovie,\n    setCurrentPage: homePageAction.setCurrentPage\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\n","/Users/imane/Desktop/GITHUB/Movie-browse/src/pages/homePage/Homepage.js",[],"/Users/imane/Desktop/GITHUB/Movie-browse/src/pages/PageNotFound.js",[],"/Users/imane/Desktop/GITHUB/Movie-browse/src/pages/popular.js",[],"/Users/imane/Desktop/GITHUB/Movie-browse/src/pages/movieProfile/movieProfile.js",["115"],"import React, {useState} from 'react';\nimport \"../../utils\";\nimport {connect} from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport {FaPlay} from \"react-icons/all\";\nimport * as homePageAction from \"../../redux/actions/homePageActions\";\nimport './movieProfile.scss'\nimport axios from \"axios\";\nimport{VIDEO_LINK,API_KEY} from \"../../utils\";\nimport ModalVideo from \"react-modal-video\";\nimport 'react-modal-video/scss/modal-video.scss';\n\nfunction MovieProfile({currentMovie,genres}) {\n\n    const {vote_average, id, release_date, backdrop_path, overview, poster_path, title} = currentMovie;\n\nconst [mov,setMov] = useState('');\nconst [trailer,setTrailer]=useState(false);\n\n   async function checkTrailer(){\n        if(mov === ''){\n            const url = `${VIDEO_LINK}${id}/videos${API_KEY}`;\n            axios.get(url).then(response => {\n                setMov( response.data.results[0].key );\n\n            });\n\n        }\n        setTrailer(true);\n\n     }\n\n    return (\n        <>\n           <div className={\"container-profile\"} style={{backgroundImage: `url(https://image.tmdb.org/t/p/w1280/${backdrop_path})`}}>\n                {\n                    trailer\n                    ?\n                    <ModalVideo\n                        channel=\"youtube\"\n                        isOpen={trailer}\n                        videoId={mov}\n                        onClose={() => setTrailer(false)}\n                    />\n                    :\n                    <div className={'content'}>\n                        <div className={\"info\"}>\n                            <div className={\"profile-img\"}>\n                                <div className={\"img-container\"}>\n                                    <img src={`https://image.tmdb.org/t/p/w500/${poster_path}`} alt={title}/>\n                                </div>\n                            </div>\n                            <div className=\"profile-text\">\n                                <h2>{title}</h2>\n                                <ul className={'sub-title'}>\n                                    <li><small>{vote_average === 0 ? \"No ratings yet\" : `Rating: ${vote_average}`} </small></li>\n                                    <li> <small>Year: {release_date.substr(0, 4)} </small></li>\n                                </ul>\n                                <br/>\n                               <ul className={\"genres\"}>\n                                   <li>{genres.genres[0].name}</li>\n                                   <li>{genres.genres[1].name}</li>\n                                   <li>{genres.genres[2].name}</li>\n                               </ul>\n                                <p className={\"description\"}>{overview}</p>\n                                <ul>\n                                    <li className={'trailer-btn'} onClick={checkTrailer}>\n                                        trailer\n                                        <FaPlay/>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n\n                }\n           </div>\n        </>\n    )\n}\nMovieProfile.prototypes = {\n    trailer: PropTypes.array.isRequired,\n    searchTrailer: PropTypes.func.isRequired,\n    currentMovie :PropTypes.array.isRequired\n}\n\nfunction mapStateToProps(state) {\n    return {\n        trailer: state.homePageReducer.trailer,\n        currentMovie: state.homePageReducer.currentMovie,\n        genres: state.homePageReducer.genres\n    };\n}\n\nconst mapDispatchToProps = {\n    searchTrailer:  homePageAction.searchTrailer()\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(MovieProfile);\n","/Users/imane/Desktop/GITHUB/Movie-browse/src/utils.js",[],"/Users/imane/Desktop/GITHUB/Movie-browse/src/redux/reducers/homePageReducer.js",[],"/Users/imane/Desktop/GITHUB/Movie-browse/src/redux/reducers/apiStatusReducer.js",[],"/Users/imane/Desktop/GITHUB/Movie-browse/src/redux/actions/homePageActions.js",[],"/Users/imane/Desktop/GITHUB/Movie-browse/src/Components/commons/searchbar/searchbar.js",[],"/Users/imane/Desktop/GITHUB/Movie-browse/src/Components/commons/listOfMovies/List.js",[],"/Users/imane/Desktop/GITHUB/Movie-browse/src/Components/commons/spinner/Spinner.js",[],"/Users/imane/Desktop/GITHUB/Movie-browse/src/Components/commons/slick-slider/slick-slider.js",[],"/Users/imane/Desktop/GITHUB/Movie-browse/src/redux/reducers/initialState.js",["116"],"export default {\n    searchInput:'',\n    currentPage: 1,\n    currentMovieProfile:  null,\n    apiCallsInProgress: 0,\n    currentMovie:[],\n    loading: false,\n\n};\n","/Users/imane/Desktop/GITHUB/Movie-browse/src/redux/actions/actionTypes.js",[],"/Users/imane/Desktop/GITHUB/Movie-browse/src/redux/actions/apiStatus.js",[],"/Users/imane/Desktop/GITHUB/Movie-browse/src/Api/movieApi.js",[],"/Users/imane/Desktop/GITHUB/Movie-browse/src/Components/commons/card/Card.js",[],"/Users/imane/Desktop/GITHUB/Movie-browse/src/Api/apiUtils.js",[],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":5,"column":8,"nodeType":"123","messageId":"124","endLine":5,"endColumn":14},{"ruleId":"121","severity":1,"message":"125","line":21,"column":12,"nodeType":"123","messageId":"124","endLine":21,"endColumn":23},{"ruleId":"121","severity":1,"message":"126","line":15,"column":82,"nodeType":"123","messageId":"124","endLine":15,"endColumn":91},{"ruleId":"127","severity":1,"message":"128","line":1,"column":1,"nodeType":"129","endLine":9,"endColumn":3},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"no-unused-vars","'logger' is defined but never used.","Identifier","unusedVar","'movieGenres' is assigned a value but never used.","'genre_ids' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]